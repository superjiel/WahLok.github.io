<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>清道夫</title>
  <subtitle>高举理想的火炬</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-11-07T09:38:35.465Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Ifour</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>各种测试手段</title>
    <link href="http://yoursite.com/2016/11/07/%E5%90%84%E7%A7%8D%E6%B5%8B%E8%AF%95%E6%89%8B%E6%AE%B5/"/>
    <id>http://yoursite.com/2016/11/07/各种测试手段/</id>
    <published>2016-11-07T07:40:21.000Z</published>
    <updated>2016-11-07T09:38:35.465Z</updated>
    
    <content type="html"><![CDATA[<h1 id="测试手段的分类系统（与软件测试术语汇总少有重复）"><a href="#测试手段的分类系统（与软件测试术语汇总少有重复）" class="headerlink" title="测试手段的分类系统（与软件测试术语汇总少有重复）"></a>测试手段的分类系统（与软件测试术语汇总少有重复）</h1><h1 id="五要素测试系统（FIve-fold-Testing-System）"><a href="#五要素测试系统（FIve-fold-Testing-System）" class="headerlink" title="五要素测试系统（FIve-fold Testing System）"></a>五要素测试系统（FIve-fold Testing System）</h1><p>所有的测试都包括这五个要素：</p>
<ul>
<li>测试员。<br>进行测试的人。用户测试是由目标市场的成员、通常使用该产品的人进行的专项测试。</li>
<li>覆盖率。<br>测试了哪些内容。在功能测试中，要测试每个功能。</li>
<li>潜在问题。测试的原因（要测试什么风险）。测试极值错误。</li>
<li>活动。如何测试？探索测试。</li>
<li>评估。怎样判定测试通过还是不通过。 与已知正确结果的比价。</li>
</ul>
<p>测试时要时刻想着所有五个要素，就能很好做出组合选择。要有意识地做出类似上面提到的决定，而不是采用或只关注某种手段。</p>
<h1 id="测试手段"><a href="#测试手段" class="headerlink" title="测试手段"></a>测试手段</h1><ul>
<li>用户测试<br>由使用该产品的典型人员进行输入的测试。用户测试可以做开发期间任何时候进行。</li>
<li>α测试<br>由测试小组（可能包括其他感兴趣的内部人员）执行的内部测试。</li>
<li>β测试<br>利用不属于开发机构并且是产品的目标市场成员的测试员实施的用户测试。待测试产品一般非常接近完成。</li>
<li>强力测试<br>利用可以找到的任何人所实施的内部测试。强力测试一般持续半天，在软件接近投放市场时进行。</li>
<li>有关领域的专家测试<br>向软件目标领域内的专家提供产品，并需求反馈意见。看重的是专家的知识，而不是其市场的代表性。</li>
<li>成对测试<br>两个测试员在一起发现程序错误。一般情况下，他们共用一台计算机，在测试时轮流操作。</li>
<li>自用测试<br>全公司使用并依靠自己软件的试用版</li>
<li>功能测试<br>逐个测试每个功能，彻底测试功能，知道可以确信该功能没有问题。白盒功能测试通常叫做单元测试，集中测试可以看到的代码的功能<br>。黑盒功能测试关注命令和特性，以及用户可以做或者选择的事情。在做涉及多个功能的更复杂的测试之前，最好先做功能测试。在复合<br>测试中，第一个出现问题的功能可能会使测试停下来，阻止通过这个测试发现多个其他功能也出现问题。</li>
<li>特性或功能集成测试<br>一起测试多个功能，以检查功能在一起的执行的情况。</li>
<li>菜单浏览<br>遍历gui产品中的所有菜单和对话框，使用每个可用的选项。</li>
<li>域测试<br>域是一个（数字）集合，包含所有可能的函数变量取值。在域测试中要标识函数和变量。变量可以是输入或输出变量。（输入<br>域和值域之间的数字区别在这里无关，因为两种域的测试分析都是一样的。）</li>
<li>等价类分析<br>测试的都是相同的东西，如果其中一个捕获到一个程序错误、其他测试用例也可能捕获到，如果其中一个不能捕获到某个程序错误<br>，其他测试用例可能也不能捕获到</li>
<li>边界测试<br>等价类是一组取值。如果可以把成员映射到一列数字上，则边界值就是类的最小和最大值，在边界测试中，要测试这些值，还要测试<br>相邻类的边界值，这些值比要测试的类的最小值略小，必要测试的类的最大值略大。</li>
<li>逻辑测试<br>变量在程序中有关系。逻辑测试试图检查程序汇中的所有逻辑关系。因国土是一种用于设计大量基于逻辑测试的手段</li>
<li>基于状态测试<br>在给定状态中，有些输入是有效的，其他输入被忽略或拒绝。对于有效输入，被测程序要完成它可以做的事，并且不尝试它不能做的事<br>。在基于状态的测试中，每次都要通过大量的状态迁移并仔细检查结果来检验程序</li>
<li>路径测试<br>一条路径包含测试员所测试的所有步骤，或程序为了得到正确状态所通过的所有语句。有些测试员进行子路径测试，测试很多部分路径。</li>
<li>语句与分支覆盖率<br>如果执行了程序中的所有语句（或代码行），则达到100%的语句覆盖率。如果执行了所有的语句和一个语句到另一个语句之间的所有分支，<br>则达到100%的语句和分支覆盖率。</li>
<li>配置覆盖率<br>配置覆盖率度量测试人员已经运行（并且程序通过）的配置测试占计划运行的配置测试总数的百分比。</li>
<li>基于规格说明的测试<br>这种测试关注验证规格说明中所做的有关产品的每个事实声明。（事实声明可以用真或假表示的任何语句）<br>常常包括手册、市场开发文档或给客户的印刷品中的所有声明。</li>
<li>基于需求的测试<br>测试关注证明程序满足需求中的所有需求（或关注逐个需求地证明某个需求没有被满足）</li>
<li>组合测试<br>相互组合测试两个或更多变量。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;测试手段的分类系统（与软件测试术语汇总少有重复）&quot;&gt;&lt;a href=&quot;#测试手段的分类系统（与软件测试术语汇总少有重复）&quot; class=&quot;headerlink&quot; title=&quot;测试手段的分类系统（与软件测试术语汇总少有重复）&quot;&gt;&lt;/a&gt;测试手段的分类系统（与软件测
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>学习书单（测试向）</title>
    <link href="http://yoursite.com/2016/11/04/%E5%AD%A6%E4%B9%A0%E4%B9%A6%E5%8D%95%EF%BC%88%E6%B5%8B%E8%AF%95%E5%90%91%EF%BC%89/"/>
    <id>http://yoursite.com/2016/11/04/学习书单（测试向）/</id>
    <published>2016-11-04T09:20:47.000Z</published>
    <updated>2016-11-07T08:50:46.603Z</updated>
    
    <content type="html"><![CDATA[<h1 id="可读性高的测试入门书籍"><a href="#可读性高的测试入门书籍" class="headerlink" title="可读性高的测试入门书籍"></a>可读性高的测试入门书籍</h1><ul>
<li>《批判性思维的工具：心理学的元思想》</li>
<li>《思考与决策》</li>
<li>《研究的技巧》</li>
<li>《旷野中的认知》</li>
<li>《理论与证据：科学推理的能力的开发》</li>
<li>《证明与反驳：数学发现的逻辑》</li>
</ul>
<h1 id="在读软件测试书籍"><a href="#在读软件测试书籍" class="headerlink" title="在读软件测试书籍"></a>在读软件测试书籍</h1><ul>
<li>《大话软件测试》</li>
<li>《软件测试经验与教训》</li>
<li>《软测之魂：核心测试设计精解 》</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;可读性高的测试入门书籍&quot;&gt;&lt;a href=&quot;#可读性高的测试入门书籍&quot; class=&quot;headerlink&quot; title=&quot;可读性高的测试入门书籍&quot;&gt;&lt;/a&gt;可读性高的测试入门书籍&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;《批判性思维的工具：心理学的元思想》&lt;/li&gt;
&lt;li&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Web测试方法总结</title>
    <link href="http://yoursite.com/2016/11/02/web%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2016/11/02/web测试方法总结/</id>
    <published>2016-11-02T02:50:30.000Z</published>
    <updated>2016-11-02T03:49:27.873Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、输入框"><a href="#一、输入框" class="headerlink" title="一、输入框"></a>一、输入框</h1><p>在web测试中，我们经常遇到这种输入框的测试，输入框测试看似简单，实际上包含了很多的测试基本的方法，思考逻辑，下面就是我总结出来的一些注意点：<br>1）验证输入输出信息的一致性<br>2）输入框前面的文字提示是否正确<br>3）对特殊字符的处理、识别：单双引号，括号，逗号、分号等等，以及大小写状态，半角全角状态下的情况<br>4）输入框的大小、长度、边框等<br>5）不同字符的输入，以及字符组合情况的处理（数字+字母+字符等）<br>6）对空格、tab换行键的处理机制<br>7）密码输入框字符星号或者其他星号的转行，加密<br>8）输入框输入字符长度是否有限制<br>9）字符本身显示的颜色，规格等<br>10）有些输入框需要加以限制，如输错，是否有提示？提示是否简单合理？<br>11）输入状态，某种情况下输入框出于不可编辑，当再次处于编辑状态，输入框的输入状态是否有变化？<br>12）输入类型：是否允许复制黏贴剪切等输入操作<br>13）关键字是否支持通配符，以及关键字的搜索能力<br>14）输入框输入空格的情况<br>15）比如登陆注册，各项输入条件的判定：是否输入，输入是否正确等</p>
<ol>
<li><p>字符型输入框：<br>（1）字符型输入框：英文全角、英文半角、数字、空或者空格、特殊字符“~！@#￥%……&amp;*？[]{}”特别要注意单引号和&amp;符号。禁止直接输入特殊字符时，使用“粘贴、拷贝”功能尝试输入。<br>（2）长度检查：最小长度、最大长度、最小长度-1、最大长度+1、输入超工字符比如把整个文章拷贝过去。<br>（3）空格检查：输入的字符间有空格、字符前有空格、字符后有空格、字符前后有空格<br>（4）多行文本框输入：允许回车换行、保存后再显示能够保存输入的格式、仅输入回车换行，检查能否正确保存（若能，检查保存结果，若不能，查看是否有正常提示）、<br>（5）安全性检查：输入特殊字符串（null，NULL，javascript，<script>，</script>，<title>，<html>，<td>）、输入脚本函数(<script>alert(“abc”)</script>)、doucment.write(“abc”)、<b>hello</b>）</td></html></title></p>
</li>
<li><p>数值型输入框：<br>（1）边界值：最大值、最小值、最大值+1、最小值-1<br>（2）位数：最小位数、最大位数、最小位数-1最大位数+1、输入超长值、输入整数<br>（3）异常值、特殊字符：输入空白（NULL）、空格或”~!@#$%^&amp;*()_+{}|<br>[]:”&lt;&gt;?;’，./?;:’-=等可能导致系统错误的字符、禁止直接输入特殊字符时，尝试使用粘贴拷贝查看是否能正常提交、word<br>中的特殊功能，通过剪贴板拷贝到输入框，分页符，分节符类似公式的上下标等、数值的特殊符号如∑，?，?，∏，+，-等、<br>输入负整数、负小数、分数、输入字母或汉字、小数（小数前0点舍去的情况，多个小数点的情况）、首位为0的数字如01、02、科学计数法是否支持1.0E2、全角数字与半角数字、数字与字母混合、16进制，8进制数值、货币型输入（允许小数点后面几位）、<br>（4）安全性检查：不能直接输入就copy</p>
</li>
<li><p>日期型输入框：<br>（1）合法性检查：(输入0日、1日、32日)、月输入[1、3、5、7、8、10、12]、日输入[31]、月输入<br>[4、6、9、11]、日输入[30]、[31]、输入非闰年，月输入[2]，日期输入[28、29]、输入闰年，月输入[2]、日期输入[29、30]、<br>月输入[0、1、12、13]<br>(2)异常值、特殊字符：输入空白或NULL、输入~！@#￥%……&amp;*（）{}[]等可能导致系统错误的字符<br>（3）安全性检查：不能直接输入，就copy，是否数据检验出错？</p>
</li>
<li>信息重复:在一些需要命名，且名字应该唯一的信息输入重复的名字或ID，看系统有没有处理，会否报错，重名包括是否区分大小写，以及在输入内容的前后输入空格，系统是否作出正确处理.</li>
</ol>
<h1 id="二、搜索功能"><a href="#二、搜索功能" class="headerlink" title="二、搜索功能"></a>二、搜索功能</h1><p>若查询条件为输入框，则参考输入框对应类型的测试方法</p>
<ol>
<li>功能实现：<br>（1）如果支持模糊查询，搜索名称中任意一个字符是否能搜索到<br>（2）比较长的名称是否能查到<br>（3）输入系统中不存在的与之匹配的条件<br>（4）用户进行查询操作时，一般情况是不进行查询条件的清空，除非需求特殊说明。</li>
<li>组合测试：<br>（1）不同查询条件之间来回选择，是否出现页面错误（单选框和多选框最容易出错）<br>（2）测试多个查询条件时，要注意查询条件的组合测试，可能不同组合的测试会报错。</li>
</ol>
<h1 id="三、添加、修改功能"><a href="#三、添加、修改功能" class="headerlink" title="三、添加、修改功能"></a>三、添加、修改功能</h1><ol>
<li>特殊键：（1）是否支持Tab键 （2）是否支持回车键</li>
<li>提示信息：（1）不符合要求的地方是否有错误提示</li>
<li>唯一性：（1）字段唯一的，是否可以重复添加，添加后是否能修改为已存在的字段（字段包括区分大小写以及在输入的内容前后输入空格，保存后，数据是否真的插入到数据库中，注意保存后数据的正确性）</li>
<li>数据 正确性：<br>（1）对编辑页的每个编辑项进行修改，点击保存，是否可以保存成功，检查想关联的数据是否得到更新。<br>（2）进行必填项检查（即是否给出提示以及提示后是否依然把数据存到数据库中；是否提示后出现页码错乱等）<br>（3）是否能够连续添加（针对特殊情况）<br>（4）在编辑的时候，注意编辑项的长度限制，有时在添加的时候有，在编辑的时候却没有（注意要添加和修改规则是否一致）<br>（5）对于有图片上传功能的编辑框，若不上传图片，查看编辑页面时是否显示有默认的图片，若上传图片，查看是否显示为上传图片<br>（6）修改后增加数据后，特别要注意查询页面的数据是否及时更新，特别是在首页时要注意数据的更新。<br>（7）提交数据时，连续多次点击，查看系统会不会连续增加几条相同的数据或报错。<br>（8）若结果列表中没有记录或者没选择某条记录，点击修改按钮，系统会抛异常。</li>
</ol>
<h1 id="四、删除功能"><a href="#四、删除功能" class="headerlink" title="四、删除功能"></a>四、删除功能</h1><p>1、特殊键：（1）是否支持Tab键 （2）是否支持回车键<br>2、提示信息：（1）不选择任何信息，直接点击删除按钮，是否有提示（2）删除某条信息时，应该有确认提示<br>3、数据 实现：（1）是否能连续删除多个产品（2）当只有一条数据时，是否可以删除成功<br>（3）删除一条数据后，是否可以添加相同的数据（4）如系统支持批量删除，注意删除的信息是否正确<br>（5）如有全选，注意是否把所有的数据删除（6）删除数据时，要注意相应查询页面的数据是否及时更新 （7）如删除的数据与其他业务数据关联，要注意其关联性（如删除部门信息时，部门下游员工，则应该给出提示）（8）如果结果列表中没有记录或没有选择任何一条记录，点击删除按钮系统会报错。<br>如：某一功能模块具有最基本的增删改查功能，则需要进行以下测试<br>单项功能测试（增加、修改、查询、删除）<br>增加——&gt;增加——&gt;增加 （连续增加测试）<br>增加——&gt;删除<br>增加——&gt;删除——&gt;增加 （新增加的内容与删除内容一致）<br>增加——&gt;修改——&gt;删除<br>修改——&gt;修改——&gt;修改 （连续修改测试）<br>修改——&gt;增加（新增加的内容与修改前内容一致）<br>修改——&gt;删除<br>修改——&gt;删除——&gt;增加 （新增加的内容与删除内容一致）<br>删除——&gt;删除——&gt;删除 （连续删除测试）</p>
<h1 id="五、注册、登陆模块"><a href="#五、注册、登陆模块" class="headerlink" title="五、注册、登陆模块"></a>五、注册、登陆模块</h1><ol>
<li>注册功能：<br>（1）注册时，设置密码为特殊版本号，检查登录时是否会报错<br>（2）注册成功后，页面应该以登陆状态跳转到首页或指定页面<br>（3）在注册信息中删除已输入的信息，检查是否可以注册成功。</li>
<li>登陆 功能：<br>（1）输入正确的用户名和正确的密码<br>（2）输入正确的用户名和错误的密码<br>（3）输入错误的用户名和正确的密码<br>（4）输入错误的用户名和错误的密码<br>（5）不输入用户名和密码（均为空格）<br>（6）只输入用户名，密码为空<br>（7）用户名为空，只输入密码<br>（8）输入正确的用户名和密码，但是不区分大小写<br>（9）用户名和密码包括特殊字符<br>（10）用户名和密码输入超长值<br>（11）已删除的用户名和密码<br>（12）登录时，当页面刷新或重新输入数据时，验证码是否更新</li>
</ol>
<h1 id="六、上传图片测试"><a href="#六、上传图片测试" class="headerlink" title="六、上传图片测试"></a>六、上传图片测试</h1><ol>
<li>功能 实现：<br>（1）文件类型正确、大小合适<br>（2）文件类型正确，大小不合适<br>（3）文件类型错误，大小合适<br>（4）文件类型和大小都合适，上传一个正在使用中的图片<br>（5）文件类型大小都合适，手动输入存在的图片地址来上传<br>（6）文件类型和大小都合适，输入不存在的图片地址来上传<br>（7）文件类型和大小都合适，输入图片名称来上传<br>（8）不选择文件直接点击上传，查看是否给出提示<br>（9）连续多次选择不同的文件，查看是否上传最后一次选择的文件</li>
</ol>
<h1 id="七、查询结果列表"><a href="#七、查询结果列表" class="headerlink" title="七、查询结果列表"></a>七、查询结果列表</h1><ol>
<li>功能 实现：<br>（1）列表、列宽是否合理<br>（2）列表数据太宽有没有提供横向滚动<br>（3）列表的列名有没有与内容对应<br>（4）列表的每列的列名是否描述的清晰<br>（5）列表是否把不必要的列都显示出来<br>（6）点击某列进行排序，是否会报错（点击查看每一页的排序是否正确）<br>（7）双击或单击某列信息，是否会报错</li>
</ol>
<h1 id="八、用户权限测试"><a href="#八、用户权限测试" class="headerlink" title="八、用户权限测试"></a>八、用户权限测试</h1><p>用户权限，顾名思义，就是该账号拥有哪些执行操作的权利<br>1）给某账号赋予权限后，登陆该账号，查看是否拥有已赋予的权限，以及权限设置是否正确（权限是否超过或者不足）<br>2）删除或修改已经登陆并且正在执行操作的账号权限，程序能否正确处理，验证<br>3）重新注册系统变更登陆身份后再登陆，程序能否正确执行，之前所拥有的权限能否继续使用<br>4）在用工作分配或者角色管理情况下，删除包含用户的工作组或者角色，程序能否正确处理<br>5）不同权限账号登陆同一个系统，权限范围是否正确<br>6）能否给信息为空、长用户名的账号添加权限<br>7）是否允许删除系统管理员或者修改管理员权限？删除或者修改后的实际情况<br>8）已登录的用户能否修改或者删除自己或者他人的权限，信息<br>9）添加用户（有编号或者标识），不同用户名标识的组合情况下，权限能否处理正确<br>10）修改用户权限或者信息后，对其他模块是否有影响<br>11）如果修改用户信息为和已存在的其他用户信息相同，能否修改成功？是否有对应提示？<br>12）修改某些设置，是否会对与该账号权限相同或者高于/低于该账号的其他账号的权限造成影响<br>13）用一用户是否可以同时属于其他组，各个组的权限能否交叉？</p>
<h1 id="九、返回键检查"><a href="#九、返回键检查" class="headerlink" title="九、返回键检查"></a>九、返回键检查</h1><ol>
<li>一条已经成功提交的记录，返回后再提交，是否做了处理</li>
<li>检查多次使用返回键的情况，在有返回键的地方，返回到原来的页面多次，查看是否会出错</li>
</ol>
<h1 id="十、回车键检查"><a href="#十、回车键检查" class="headerlink" title="十、回车键检查"></a>十、回车键检查</h1><ol>
<li>在输入结果后，直接按回车键，看系统如何处理，是否会报错
　<h1 id="十一、刷新键检查"><a href="#十一、刷新键检查" class="headerlink" title="十一、刷新键检查"></a>十一、刷新键检查</h1></li>
<li>在Web系统中，使用刷新键，看系统如何处理，是否会报错</li>
</ol>
<h1 id="十二、直接URL链接检查"><a href="#十二、直接URL链接检查" class="headerlink" title="十二、直接URL链接检查"></a>十二、直接URL链接检查</h1><ol>
<li>在Web系统中，在地址栏直接输入各个功能页面的URL地址，看系统如何处理，是否能够直接链接查看（匿名查看），是否有权限控制，是否直接执行，并返回相应结果页；</li>
</ol>
<h1 id="十三、界面和易用性测试"><a href="#十三、界面和易用性测试" class="headerlink" title="十三、界面和易用性测试"></a>十三、界面和易用性测试</h1><ol>
<li>风格、样式、颜色是否协调</li>
<li>界面布局是否整齐、协调（保证全部显示出来的，尽量不要使用滚动条</li>
<li>界面操作、标题描述是否恰当（描述有歧义、注意是否有错别字）</li>
<li>操作是否符合人们的常规习惯（有没有把相似的功能的控件放在一起，方便操作）</li>
<li>提示界面是否符合规范（不应该显示英文的cancel、ok，应该显示中文的确定等）</li>
<li>界面中各个控件是否对齐</li>
<li>日期控件是否可编辑</li>
<li>日期控件的长度是否合理，以修改时可以把时间全部显示出来为准</li>
<li>查询结果列表列宽是否合理、标签描述是否合理</li>
<li>查询结果列表太宽没有横向滚动提示</li>
<li>对于信息比较长的文本，文本框有没有提供自动竖直滚动条</li>
<li>数据录入控件是否方便</li>
<li>有没有支持Tab键，键的顺序要有条理，不乱跳</li>
<li>有没有提供相关的热键</li>
<li>控件的提示语描述是否正确</li>
<li>模块调用是否统一，相同的模块是否调用同一个界面</li>
<li>用滚动条移动页面时，页面的控件是否显示正常</li>
<li>日期的正确格式应该是XXXX-XX-XX或XXXX-XX-XX XX:XX:XX</li>
<li>页面是否有多余按钮或标签</li>
<li>窗口标题或图标是否与菜单栏的统一</li>
<li>窗口的最大化、最小化是否能正确切换</li>
<li>对于正常的功能，用户可以不必阅读用户手册就能使用</li>
<li>执行风险操作时，有确认、删除等提示吗</li>
<li>操作顺序是否合理</li>
<li>正确性检查：检查页面上的form， button， table， header， footer，提示信息，还有其他文字拼写，句子的语法等是否正确。</li>
<li>系统应该在用户执行错误的操作之前提出警告，提示信息.</li>
<li>页面分辨率检查，在各种分辨率浏览系统检查系统界面友好性。</li>
<li>合理性检查：做delete， update， add， cancel， back等操作后，查看信息回到的页面是否合理。</li>
<li>检查本地化是否通过：英文版不应该有中文信息，英文翻译准确，专业。</li>
</ol>
<h1 id="十四、兼容性测试"><a href="#十四、兼容性测试" class="headerlink" title="十四、兼容性测试"></a>十四、兼容性测试</h1><p>2.1平台兼容<br>现在有很多的操作系统，比如Windows、Unix、Linux、macintosh等；用户使用哪个系统取决于用户，因此，系统兼容测试就很有必要了。<br>2.2浏览器兼容<br>浏览器是web客户端最核心的组件，不同的浏览器，对Java，JavaScript，css或者HTML的规格都有不同的支持；另外，采用的框架和结构风格在不同浏览器中也存在不同的显示甚至不显示，不同的浏览器对安全性的设置也是不同的。<br>测试浏览器兼容，有个方法就是创建一个兼容性矩阵，来测试不同厂商不同版本的浏览器兼容。<br>比如测试IE浏览器，可以通过一个叫做IEtester的工具来测试兼容，或者可以通过F12控制台来切换浏览器版本来测试兼容以前一些前端元素的显示等<br>鉴于国内市场浏览器很多，比如360、搜狗，搜狐、QQ浏览器等，这些本土的浏览器基本都采用的IE浏览器内核的双核配置.</p>
<h1 id="十五、链接测试"><a href="#十五、链接测试" class="headerlink" title="十五、链接测试"></a>十五、链接测试</h1><p>链接是web应用系统的一个很重要的特征，主要是用于页面之间切换跳转，指导用户去一些不知道地址的页面的主要手段，链接测试一般关注三点：<br>1）链接是否按照既定指示那样，确实链接到了该链接的界面<br>2）测试该链接所链接的页面是否真的存在<br>3）保证系统中没有单独存在的页面（即没有链接指向，只能通过正确的URL地址才能访问）<br>1.2表单测试<br>这个也可以理解为数据落地；当用户在web应用系统上向服务器提交信息时，就需要使用表单操作，比如，用户注册，登录，信息变更等等；这种情况下，我们必须测试提交信息的完整性，以检验提交给服务器的数据的正确性，当然，这个还涉及<br>到一些常理性的逻辑，比如，出生日期和职业，工作年限是否恰当，所在地省份城市区域间的匹配等，如果设定使用默认值，也需要测试。<br>1.3导航测试<br>作为测试，很多时候都要站在用户的角度去思考，那么，作为一个用户，当他访问一个web的网站或者系统时，会怎么去操作呢？<br>大家都知道，大部分用户都是目的驱动的，当他访问一个网站或者web系统时，会很快的浏览系统，找不到满足自己需求的信息时，会很快离开，很少有用户愿意花时间去熟悉系统的结构，因此，导航测试就显得很重要了。<br>所谓的导航测试，就是在不同的页面跳转之间，或者按钮，对话框，列表以及窗口等，通过考虑这些因素，去判断一个应用系统是否易于导航：是否直观？系统的主要模块是否可以通过主页访问或者到达？站点是否需要站内地图或者搜索引擎等其他帮助？<br>web系统导航的另外一个重点就是页面结构、导航、菜单、风格等是否一致，确保用户可以凭借直觉或者简单的判断就可以找到自己想要的内容。<br>1.4图形测试<br>也可以理解为UI测试，其中包括图片、动画、边框、颜色、字体、背景、按钮等等。<br>其中要考虑的几个重点，我做了一个大概的总结：<br>1）图片要有明确的用途，代表；图片尺寸尽量小，一般采用JPG或者GIF压缩<br>     2）页面整体风格是否和系统的用途一致<br>3）背景颜色，字体，搭配是否合理<br>1.5内容测试<br>这个主要用来检测web系统提供信息的准确性、相关性<br>比如：商品的价格，文字描述；信息的准确性，是否有拼写错误；信息的相关性，比如很多网站的“相关文章列表，视频列表等”<br>1.6整体界面测试<br>这个也就是我们常说的用户体验。用户浏览时是否感觉舒适，整体风格等等<br>这个我建议一般做一个类似问卷调查的形式，来判定用户的反馈信息，最好有最终用户的参与</p>
<h1 id="十六、业务流程测试（主要功能测试）"><a href="#十六、业务流程测试（主要功能测试）" class="headerlink" title="十六、业务流程测试（主要功能测试）"></a>十六、业务流程测试（主要功能测试）</h1><p>业务流程，一般会涉及到多个模块的数据，所以在对业务流程测试时，首先要保证单个模块功能的正确性，其次就要对各个模块间传递的数据进行测试，这往往是容易出现问题的地方，测试时一定要设计不同的数据进行测试。</p>
<h1 id="十七、安全性测试"><a href="#十七、安全性测试" class="headerlink" title="十七、安全性测试"></a>十七、安全性测试</h1><p>（1）SQL注入（比如登陆页面）<br>（2）XSS跨网站脚本攻击：程序或数据库没有对一些特殊字符进行过滤或处理，导致用户所输入的一些破坏性的脚本语句能够直接写进数据库中，浏览器会直接执行这些脚本语句，破坏网站的正常显示，或网站用户的信息被盗，构造脚本语句时，要保证脚本的完整性。<br>document.write(“abc”)</p>
<p><script>alter(“abc”)</script><br>（3）URL地址后面随便输入一些符号，并尽量是动态参数靠后<br>（4）验证码更新问题<br>（5）现在的Web应用系统基本采用先注册，后登陆的方式。因此，必须测试有效和无效的用户名和密码，要注意到是否大小写敏感，可以试多少次的限制，是否可以不登陆而直接浏览某个页面等。<br>（6）Web应用系统是否有超时的限制，也就是说，用户登陆后在一定时间内（例如15分钟）没有点击任何页面，是否需要重新登陆才能正常使用。<br>（7）为了保证Web应用系统的安全性，日志文件是至关重要的。需要测试相关信息是否写进了日志文件、是否可追踪。<br>（8）当使用了安全套接字时，还要测试加密是否正确，检查信息的完整性。<br>（9）服务器端的脚本常常构成安全漏洞，这些漏洞又常常被黑客利用。所以，还要测试没有经过授权，就不能在服务器端放置和编辑脚本的问题。</p>
<h1 id="十八、性能测试"><a href="#十八、性能测试" class="headerlink" title="十八、性能测试"></a>十八、性能测试</h1><ol>
<li>连接速度测试<br>用户连接到Web应用系统的速度根据上网方式的变化而变化，他们或许是电话拨号，或是宽带上网。当下载一个程序时，用户可以等较长的时间，但如果仅仅访问一个页面就不会这样。如果Web系统响应时间太长（例如超过5秒钟），用户就会因没有耐心等待而离开。<br>另外，有些页面有超时的限制，如果响应速度太慢，用户可能还没来得及浏览内容，就需要重新登陆了。而且，连接速度太慢，还可能引起数据丢失，使用户得不到真实的页面。</li>
<li>负载测试<br>负载测试是为了测量Web系统在某一负载级别上的性能，以保证Web系统在需求范围内能正常工作。负载级别可以是某个时刻同时访问Web系统的用户数量，也可以是在线数据处理的数量。例如：Web应用系统能允许多少个用户同时在线？如果超过了这个数量，会出现什么现象？Web应用系统能否处理大量用户对同一个页面的请求？</li>
<li>压力测试<br>负载测试应该安排在Web系统发布以后，在实际的网络环境中进行测试。因为一个企业内部员工，特别是项目组人员总是有限的，而一个Web系统能同时处理的请求数量将远远超出这个限度，所以，只有放在Internet上，接受负载测试，其结果才是正确可信的。<br>进行压力测试是指实际破坏一个Web应用系统，测试系统的反映。压力测试是测试系统的限制和故障恢复能力，也就是测试Web应用系统会不会崩溃，在什么情况下会崩溃。黑客常常提供错误的数据负载，直到Web应用系统崩溃，接着当系统重新启动时获得存取权。<br>压力测试的区域包括表单、登陆和其他信息传输页面等。<br>备注：<br>1、负载/压力测试应该关注什么<br>测试需要验证系统能否在同一时间响应大量的用户，在用户传送大量数据的时候能否响应，系统能否长时间运行。可访问性对用户来说是极其重要的。如果用户得到“系统忙”的信息，他们可能放弃，并转向竞争对手。系统检测不仅要使用户能够正常访问站点，在很多情况下，可能会有黑客试图通过发送大量数据包来攻击服务器。出于安全的原因，测试人员应该知道当系统过载时，需要采取哪些措施，而不是简单地提升系统性能。<br>1）瞬间访问高峰<br>如果您的站点用于公布彩票的抽奖结果，最好使系统在中奖号码公布后的一段时间内能够响应上百万的请求。负载测试工具能够模拟X个用户同时访问测试站点。<br>2）每个用户传送大量数据<br>网上书店的多数用户可能只订购1-5书，但是大学书店可能会订购5000本有关心理学介绍的课本?或者一个祖母为她的50个儿孙购买圣诞礼物(当然每个孩子都有自己的邮件地址)系统能处理单个用户的大量数据吗?<br>3）长时间的使用<br>如果站点用于处理鲜花订单，那么至少希望它在母亲节前的一周内能持续运行。如果站点提供基于web的email服务，那么点最好能持续运行几个月，甚至几年。可能需要使用自动测试工具来完成这种类型的测试，因为很难通过手工完成这些测试。你可以想象组织100个人同时点击某个站点。但是同时组织100000个人呢。通常，测试工具在第二次使用的时候，它创造的效益，就足以支付成本。而且，测试工具安装完成之后，再次使用的时候，只要点击几下。<br>采取措施：采用性能测试工具WAS、ACT，LR等协助进行测试</li>
</ol>
<h1 id="十九、测试中应该注意的其他情况"><a href="#十九、测试中应该注意的其他情况" class="headerlink" title="十九、测试中应该注意的其他情况"></a>十九、测试中应该注意的其他情况</h1><ol>
<li>在测试时，与网络有关的步骤或者模块必须考虑到断网的情况</li>
<li>每个页面都有相应的Title，不能为空，或者显示“无标题页”</li>
<li>在测试的时候要考虑到页面出现滚动条时，滚动条上下滚动时，页面是否正常</li>
<li>URL不区分大小写，大小写不敏感</li>
<li>对于电子商务网站，当用户并发购买数量大于库存的数量时，系统如何处理</li>
<li>测试数据避免单纯输入“123”、“abc“之类的，让测试数据尽量接近实际</li>
<li>进行测试时，尽量不要用超级管理员进行测试，用新建的用户进行测试。测试人员尽量不要使用同一个用户进行测试</li>
<li>提示信息：提示信息是否完整、正确、详细</li>
<li>帮助信息：是否提供帮助信息，帮助信息的表现形式（页面文字、提示信息、帮助文件），帮助信息是否正确、详细</li>
<li>可扩展性：是否由升级的余地，是否保留了接口</li>
<li>稳定性：运行所需的软硬件配置，占用资源情况，出现问题时的容错性，对数据的保护</li>
<li>运行速度：运行的快慢，带宽占用情况。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、输入框&quot;&gt;&lt;a href=&quot;#一、输入框&quot; class=&quot;headerlink&quot; title=&quot;一、输入框&quot;&gt;&lt;/a&gt;一、输入框&lt;/h1&gt;&lt;p&gt;在web测试中，我们经常遇到这种输入框的测试，输入框测试看似简单，实际上包含了很多的测试基本的方法，思考逻辑，下面就
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Python基础</title>
    <link href="http://yoursite.com/2016/11/01/Python%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2016/11/01/Python基础/</id>
    <published>2016-11-01T07:03:02.000Z</published>
    <updated>2016-11-01T08:07:41.464Z</updated>
    
    <content type="html"><![CDATA[<p>在python中，标识符由字母、数字、下划线组成。</p>
<p>在python中，所有标识符可以包括英文、数字以及下划线（_），但不能以数字开头。</p>
<p>python中的标识符是区分大小写的。</p>
<p>以下划线开头的标识符是有特殊意义的。以单下划线开头（_foo）的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用”from xxx import *”而导入；</p>
<p>以双下划线开头的（<strong>foo）代表类的私有成员；以双下划线开头和结尾的（</strong>foo<strong>）代表python里特殊方法专用的标识，如</strong>init__（）代表类的构造函数。</p>
<p>Python的代码块不使用大括号（{}）来控制类，函数以及其他逻辑判断。python用缩进来写模块。(Python的代码块中必须使用相同数目的行首缩进空格数。)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在python中，标识符由字母、数字、下划线组成。&lt;/p&gt;
&lt;p&gt;在python中，所有标识符可以包括英文、数字以及下划线（_），但不能以数字开头。&lt;/p&gt;
&lt;p&gt;python中的标识符是区分大小写的。&lt;/p&gt;
&lt;p&gt;以下划线开头的标识符是有特殊意义的。以单下划线开头（_f
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>慢性咽喉炎偏方（仅供参考）</title>
    <link href="http://yoursite.com/2016/11/01/%E6%85%A2%E6%80%A7%E5%92%BD%E5%96%89%E7%82%8E%E5%81%8F%E6%96%B9%EF%BC%88%E4%BB%85%E4%BE%9B%E5%8F%82%E8%80%83%EF%BC%89/"/>
    <id>http://yoursite.com/2016/11/01/慢性咽喉炎偏方（仅供参考）/</id>
    <published>2016-11-01T05:15:22.000Z</published>
    <updated>2016-11-01T05:28:22.240Z</updated>
    
    <content type="html"><![CDATA[<h1 id="十则药茶偏方谨供参考："><a href="#十则药茶偏方谨供参考：" class="headerlink" title="十则药茶偏方谨供参考："></a>十则药茶偏方谨供参考：</h1><ol>
<li>罗汉果茶<br>罗汉果1个。将罗汉果切碎，用沸水冲泡10分钟后，不拘时饮服。每日1–2次，每次1个。功能清肺化痰，止渴润喉。主治慢性咽喉炎，肺阴不足、痰热互结而出现的咽喉干燥不适，喉痛失音，或咳嗽口干等。<br>《食物中药与便方》谓：“演员、教师、广播员等需保护发音器官者常以罗汉果切碎，泡水代茶饮有效。” </li>
<li>橄榄茶<br>取橄榄两枚，绿茶1克。将橄榄连核切成两半，与绿茶同放入杯中，冲入开水，加盖闷5分钟后饮用。适用于慢性咽炎，咽部异物感者。 </li>
<li>大海生地茶<br>胖大海5枚，生地12克，冰糖30克，茶适量。上药共置热水瓶中，沸水冲泡半瓶，盖闷15分钟左右，不拘次数，频频代茶饮。根据患者的饮量，每日2–3剂。<br>功能清肺利咽，滋阴生津。用于慢性咽喉炎属肺阴亏虚者，如声音嘶哑，多语则喉中燥痒或干咳，喉部暗红，声带肥厚，甚则声门闭合不全，声带有小结，舌红苔少等。对于肺阴不足、虚火夹实之慢性喉炎而兼大便燥结者，用之最宜。 </li>
<li>橄揽海蜜茶<br>橄榄3g，胖大海3枚，绿茶3克，蜂蜜1匙。先将橄榄放入清水中煮片刻，然后冲泡胖大海及绿茶，闷盖片刻，入蜂蜜调匀，徐徐饮之。每日1–2剂。<br>功能清热解毒，利咽润喉。主治慢性咽喉炎，咽喉干燥不舒，或声音嘶哑等属阴虚燥热证者。 </li>
<li>二绿女贞茶<br>绿萼梅、绿茶、橘络各3克，女贞子6克。先将女贞子捣碎后，与前三味共入杯内，以沸水冲泡即可。每日1剂，不拘时饮服。<br>功能养阴利咽，行气化痰。对肝肾阴虚，虚火上浮，气郁痰结之咽痛不适，咽喉异物感，饮之有良益。 </li>
<li>桑菊杏仁茶<br>桑叶10克，菊花10克，杏仁10克，冰糖适量。将杏仁捣碎后，与桑叶、菊花、冰糖共置保温瓶中，加沸水冲泡，约盖闷15分钟后，即可当茶水饮用，边饮边加开水，每天1剂。功能清热疏风，化痰利咽。 </li>
<li>双根大海茶<br>板蓝根15克，山豆根10克，甘草10克，胖大海5克。共置保温瓶中，用沸水冲泡，盖闷20分钟后即可当茶水饮用。也可加水煎煮后，倒保温瓶中慢慢饮用，每天1剂。有清热、解毒、利咽的作用，适用于慢性咽炎咽喉疼痛明显者。</li>
<li>马鞭草绿豆蜜茶<br>鲜马鞭草50克，绿豆30克,蜂蜜30克，将绿豆洗净沥干，新鲜马鞭草连根洗净，用线扎成2小捆，与绿豆一起放锅内，加水1500毫升用小火炖1小时，至绿豆酥烂时离火，捞去马鞭草，趁热加入蜂蜜搅化即可饮汤食豆。每日1剂，分2次服，连服数日。 </li>
<li>清音茶<br>药用胖大海5克,蝉衣3克,石斛15克。水煎代茶饮。功能养阴润喉，利咽治喑，适用于慢性咽炎伴有声音嘶哑者。 </li>
<li>山楂利咽茶<br>药用生山楂20克，丹参20克，夏枯草15克。使用时，先用清水洗去浮尘，然后加水煎30分钟后，滤取药汁，一日数次，当茶频饮。功能活血散结，清热利咽。适用于慢性咽炎而咽部淋巴滤泡增生明显者。 </li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;十则药茶偏方谨供参考：&quot;&gt;&lt;a href=&quot;#十则药茶偏方谨供参考：&quot; class=&quot;headerlink&quot; title=&quot;十则药茶偏方谨供参考：&quot;&gt;&lt;/a&gt;十则药茶偏方谨供参考：&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;罗汉果茶&lt;br&gt;罗汉果1个。将罗汉果切碎，用沸水冲泡10
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Http状态码</title>
    <link href="http://yoursite.com/2016/10/28/http%E7%8A%B6%E6%80%81%E7%A0%81/"/>
    <id>http://yoursite.com/2016/10/28/http状态码/</id>
    <published>2016-10-28T05:43:46.000Z</published>
    <updated>2016-10-28T05:45:20.214Z</updated>
    
    <content type="html"><![CDATA[<p>HTTP状态码的英文为HTTP Status Code。</p>
<p>下面是常见的HTTP状态码：</p>
<p>200 - 请求成功</p>
<p>301 - 资源（网页等）被永久转移到其它URL</p>
<p>404 - 请求的资源（网页等）不存在</p>
<p>500 - 内部服务器错误</p>
<p>HTTP状态码分类<br>HTTP状态码由三个十进制数字组成，第一个十进制数字定义了状态码的类型，后两个数字没有分类的作用。HTTP状态码共分为5种类型：</p>
<p>HTTP状态码分类<br>分类    分类描述</p>
<ul>
<li>1**    信息，服务器收到请求，需要请求者继续执行操作</li>
<li>2**    成功，操作被成功接收并处理</li>
<li>3**    重定向，需要进一步的操作以完成请求</li>
<li>4**    客户端错误，请求包含语法错误或无法完成请求</li>
<li>5**    服务器错误，服务器在处理请求的过程中发生了错误</li>
</ul>
<p>HTTP状态码列表<br>100    Continue    继续。客户端应继续其请求<br>101    Switching Protocols    切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议</p>
<p>200    OK    请求成功。一般用于GET与POST请求<br>201    Created    已创建。成功请求并创建了新的资源<br>202    Accepted    已接受。已经接受请求，但未处理完成<br>203    Non-Authoritative Information    非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本<br>204    No Content    无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档<br>205    Reset Content    重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域<br>206    Partial Content    部分内容。服务器成功处理了部分GET请求</p>
<p>300    Multiple Choices    多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择<br>301    Moved Permanently    永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替<br>302    Found    临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI<br>303    See Other    查看其它地址。与301类似。使用GET和POST请求查看<br>304    Not Modified    未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源<br>305    Use Proxy    使用代理。所请求的资源必须通过代理访问<br>306    Unused    已经被废弃的HTTP状态码<br>307    Temporary Redirect    临时重定向。与302类似。使用GET请求重定向</p>
<p>400    Bad Request    客户端请求的语法错误，服务器无法理解<br>401    Unauthorized    请求要求用户的身份认证<br>402    Payment Required    保留，将来使用<br>403    Forbidden    服务器理解请求客户端的请求，但是拒绝执行此请求<br>404    Not Found    服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置”您所请求的资源无法找到”的个性页面<br>405    Method Not Allowed    客户端请求中的方法被禁止<br>406    Not Acceptable    服务器无法根据客户端请求的内容特性完成请求<br>407    Proxy Authentication Required    请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权<br>408    Request Time-out    服务器等待客户端发送的请求时间过长，超时<br>409    Conflict    服务器完成客户端的PUT请求是可能返回此代码，服务器处理请求时发生了冲突<br>410    Gone    客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置<br>411    Length Required    服务器无法处理客户端发送的不带Content-Length的请求信息<br>412    Precondition Failed    客户端请求信息的先决条件错误<br>413    Request Entity Too Large    由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息<br>414    Request-URI Too Large    请求的URI过长（URI通常为网址），服务器无法处理<br>415    Unsupported Media Type    服务器无法处理请求附带的媒体格式<br>416    Requested range not satisfiable    客户端请求的范围无效<br>417    Expectation Failed    服务器无法满足Expect的请求头信息</p>
<p>500    Internal Server Error    服务器内部错误，无法完成请求<br>501    Not Implemented    服务器不支持请求的功能，无法完成请求<br>502    Bad Gateway    充当网关或代理的服务器，从远端服务器接收到了一个无效的请求<br>503    Service Unavailable    由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中<br>504    Gateway Time-out    充当网关或代理的服务器，未及时从远端服务器获取请求<br>505    HTTP Version not supported    服务器不支持请求的HTTP协议的版本，无法完成处理</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTTP状态码的英文为HTTP Status Code。&lt;/p&gt;
&lt;p&gt;下面是常见的HTTP状态码：&lt;/p&gt;
&lt;p&gt;200 - 请求成功&lt;/p&gt;
&lt;p&gt;301 - 资源（网页等）被永久转移到其它URL&lt;/p&gt;
&lt;p&gt;404 - 请求的资源（网页等）不存在&lt;/p&gt;
&lt;p&gt;50
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>安全测试军火库</title>
    <link href="http://yoursite.com/2016/10/27/%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%86%9B%E7%81%AB%E5%BA%93/"/>
    <id>http://yoursite.com/2016/10/27/安全测试军火库/</id>
    <published>2016-10-27T09:49:33.000Z</published>
    <updated>2016-10-27T10:04:11.596Z</updated>
    
    <content type="html"><![CDATA[<h1 id="全球有260万信息安全专业人士，渗透测试工具是他们“安全军火库”中最常使用的装备"><a href="#全球有260万信息安全专业人士，渗透测试工具是他们“安全军火库”中最常使用的装备" class="headerlink" title="全球有260万信息安全专业人士，渗透测试工具是他们“安全军火库”中最常使用的装备"></a>全球有260万信息安全专业人士，渗透测试工具是他们“安全军火库”中最常使用的装备</h1><h1 id="渗透测试时使用的操作系统"><a href="#渗透测试时使用的操作系统" class="headerlink" title="渗透测试时使用的操作系统"></a>渗透测试时使用的操作系统</h1><ol>
<li>Kali Linux</li>
<li>Windows</li>
<li>Black Track</li>
<li>其他</li>
<li>Mac OS</li>
<li>BlackArch Linux</li>
<li>BackBox</li>
<li>Pentoo</li>
</ol>
<h1 id="最常使用的渗透测试框架"><a href="#最常使用的渗透测试框架" class="headerlink" title="最常使用的渗透测试框架"></a>最常使用的渗透测试框架</h1><ol>
<li>Metasploit</li>
<li>其他</li>
<li>Core Impact</li>
<li>Immunity Canvas</li>
</ol>
<h1 id="最常使用的密码-网络破解工具"><a href="#最常使用的密码-网络破解工具" class="headerlink" title="最常使用的密码/网络破解工具"></a>最常使用的密码/网络破解工具</h1><ol>
<li>John The Ripper</li>
<li>Hydra</li>
<li>Cain &amp; Abel</li>
<li>其他</li>
<li>RainbowCrack</li>
</ol>
<h1 id="最受欢迎的网络扫描工具"><a href="#最受欢迎的网络扫描工具" class="headerlink" title="最受欢迎的网络扫描工具"></a>最受欢迎的网络扫描工具</h1><ol>
<li>Nmap</li>
<li>Netcat</li>
<li>Zmap</li>
<li>其他</li>
</ol>
<h1 id="最受欢迎的嗅探工具"><a href="#最受欢迎的嗅探工具" class="headerlink" title="最受欢迎的嗅探工具"></a>最受欢迎的嗅探工具</h1><ol>
<li>Wireshark</li>
<li>Ettercap</li>
<li>Dsniff</li>
<li>其他</li>
</ol>
<h1 id="最受欢迎的蓝牙测试工具"><a href="#最受欢迎的蓝牙测试工具" class="headerlink" title="最受欢迎的蓝牙测试工具"></a>最受欢迎的蓝牙测试工具</h1><ol>
<li>BlueScanner</li>
<li>其他</li>
<li>FTS4BT</li>
<li>BlueSpam</li>
</ol>
<h1 id="最受欢迎的无线测试工具"><a href="#最受欢迎的无线测试工具" class="headerlink" title="最受欢迎的无线测试工具"></a>最受欢迎的无线测试工具</h1><ol>
<li>Aircrack-ng</li>
<li>Kismet</li>
<li>其他</li>
<li>WifiScanner</li>
</ol>
<h1 id="最受欢迎的Web应用-网站专业扫描工具"><a href="#最受欢迎的Web应用-网站专业扫描工具" class="headerlink" title="最受欢迎的Web应用/网站专业扫描工具"></a>最受欢迎的Web应用/网站专业扫描工具</h1><ol>
<li>Burp Suite</li>
<li>w3af</li>
<li>其他</li>
<li>Websecurifu Suite</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;全球有260万信息安全专业人士，渗透测试工具是他们“安全军火库”中最常使用的装备&quot;&gt;&lt;a href=&quot;#全球有260万信息安全专业人士，渗透测试工具是他们“安全军火库”中最常使用的装备&quot; class=&quot;headerlink&quot; title=&quot;全球有260万信息安全专
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>阿里巴巴B2B测试用例编写规范</title>
    <link href="http://yoursite.com/2016/10/27/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4B2B%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E7%BC%96%E5%86%99%E8%A7%84%E8%8C%83/"/>
    <id>http://yoursite.com/2016/10/27/阿里巴巴B2B测试用例编写规范/</id>
    <published>2016-10-27T09:13:05.000Z</published>
    <updated>2016-10-27T09:18:18.660Z</updated>
    
    <content type="html"><![CDATA[<h1 id="用例编写规范目的"><a href="#用例编写规范目的" class="headerlink" title="用例编写规范目的"></a>用例编写规范目的</h1><ol>
<li>统一测试用例编写的规范，为测试设计人员提供测试用例编写的指导，提高编写的测试用例的可读性，可执行性、合理性。</li>
<li>测试用例，不仅仅用于QA阅读和执行。它们也可能会被开发、PD、PM等阅读审查或执行；也更可能被其他测试人员或者新员工作为业务学习、测试执行的参照。</li>
<li>编写测试用例的最终目标是：一个对于产品毫无所知的人员，也能够快速的熟悉用例并执行用例。</li>
</ol>
<h1 id="例模块划分规范"><a href="#例模块划分规范" class="headerlink" title="例模块划分规范"></a>例模块划分规范</h1><p> 要求：</p>
<ol>
<li>产品、功能点同一层级的结构按同一个纬度来划分。如应用、同等级产品、同等级功能点等；</li>
<li>产品是指产品线下大的业务模块。如交易购物车、交易下单；</li>
<li>功能点指业务模块下的子功能点，是最小功能点叶子节点。如01 功能-02 购物车展示-01 顶部及导航；</li>
<li>功能点目前无法再细分层级，后续会扩展功能点层次，在此之前，允许使用功能点名进行分层用例划分。如06 边境仓-03 发货单管理_02 创建发货单；</li>
<li>产品、功能点划分不允许包含冒烟、回归、自动化这类以测试阶段或测试方法的命名的名称；</li>
<li>主干用例库中产品、功能点已废弃的需要删除；</li>
<li>主干用例库中产品、功能点是之前QC迁移过来的，命名格式需要修改标准格式；</li>
</ol>
<h1 id="用例颗粒度划分规范"><a href="#用例颗粒度划分规范" class="headerlink" title="用例颗粒度划分规范"></a>用例颗粒度划分规范</h1><p> 用例颗粒度原则：测试用例是执行的最小实体<br> 用例划分基本原则是以最小功能模块来划分，为保障用例的可执行性、覆盖度，规范编写用例的粒度要求如下：</p>
<ol>
<li>一个功能正常流程，编写一个测试用例；</li>
<li>一个功能中多个异常流程，应分开编写多个测试用例；</li>
<li>同一功能不同入口，可合并编写一个测试用例；</li>
<li>同一功能不同数据准备，应分开编写多个测试用例；</li>
<li>同一个功能用例的自动化用例和功能用例要匹配，若自动化用例不能完全覆盖功能用例，自动化用例和功能用例拆分两个互补测试用例；</li>
</ol>
<h1 id="用例编写要求规范"><a href="#用例编写要求规范" class="headerlink" title="用例编写要求规范"></a>用例编写要求规范</h1><p> 用例编写最基本的要求：</p>
<ol>
<li>具有清晰名称、前提条件、操作步骤、期望结果的；</li>
<li>可被他人理解的；</li>
<li>可被他人执行的；</li>
</ol>
<p>具体分项要求如下：<br>1.用例名称<br>1）常用的结构“主、谓、宾”；<br>2）名称简洁易懂，不要包括具体操作步骤；</p>
<ol>
<li><p>前置条件<br>1）执行用例测试步骤前需要做的所有必备条件，原则上所有用例都有前置条件；<br>2）不可将其他用例作为前置条件，前置条件需要语言描述；<br>3）完整清楚，包括入口、帐号类型、账号权限、数据准备等，具体要求如下：<br>3.1）入口：覆盖所有功能入口，包含URL直接访问；<br>3.2）账号类型和权限：覆盖全部会员类型，注意业务权限控制，比如子账号权限，disable会员权限；<br>3.3）数据准备：数据准备完整正确，覆盖到线上环境的所有情况；标识出业务流程处于的条；件，写明数据库表字段值，如OFFER.status=TBD；对于复杂的数据准备，写清具体SQL</p>
</li>
<li><p>操作步骤<br>1）操作步骤描述清晰。如：在什么页面，点击什么链接或按钮；页面入口、链接、按钮名称都要写清楚；<br>2）操作和结果是一一对应的，但操作中不要包含结果的检查；<br>3）用例描述中不允许存在连词、介词，比如：而且，和，还（这种情况可以拆分为多个点）；<br>4）用例描述中不允许出现假设性词汇，比如：假如，或许，可能，…的时候等；<br>5）用例描述中不允许出现二义性语句；</p>
</li>
<li><p>预期结果<br>1）原则上每个用例必需要有预期结果，结果不能为空；<br>2）结果中只能包含结果，不能有步骤；<br>3）一个结果有多个检查点时，确保检查点完整；<br>3.1）结果含需要验证的所有结果输出，如页面检查、存储检查、消息检查等；<br>3.2）结果涉及页面，需明确页面提示结果、数据变化；<br>3.3）结果涉及存储：需明确关键值变化、数据库具体的表和关键字字段值变化；<br>3.4）结果涉及消息：需明确关键查看内容；<br>3.5）结果对应不同输入数据有差别时需分别对应描述清晰；</p>
</li>
</ol>
<h1 id="用例维护规范"><a href="#用例维护规范" class="headerlink" title="用例维护规范"></a>用例维护规范</h1><p> 测试用例编写完成后，应对测试用例进行持续的维护：</p>
<ol>
<li>新项目需求变更，应及时对测试用例进行修改；</li>
<li>维护期项目，可根据项目组情况周期对用例进行维护；</li>
<li>所有发现的bug和故障，基于测试用例无法发现，需转化为测试用例；</li>
<li>项目发布后的三个工作日内，需将项目用例根据具体情况归入产品功能用例库下；</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;用例编写规范目的&quot;&gt;&lt;a href=&quot;#用例编写规范目的&quot; class=&quot;headerlink&quot; title=&quot;用例编写规范目的&quot;&gt;&lt;/a&gt;用例编写规范目的&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;统一测试用例编写的规范，为测试设计人员提供测试用例编写的指导，提高编写的测试用例
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Web安全测试大纲</title>
    <link href="http://yoursite.com/2016/10/26/Web%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%A4%A7%E7%BA%B2/"/>
    <id>http://yoursite.com/2016/10/26/Web安全测试大纲/</id>
    <published>2016-10-26T02:33:47.000Z</published>
    <updated>2016-10-27T09:10:31.267Z</updated>
    
    <content type="html"><![CDATA[<p>下文是从其他地方看到的关于WEB安全测试所需的基础知识纲要，大家可以结合本版面的其他WEB安全测试帖子一起学习</p>
<h1 id="第一章：B-S架构体系安全渗透测试基础"><a href="#第一章：B-S架构体系安全渗透测试基础" class="headerlink" title="第一章：B/S架构体系安全渗透测试基础"></a>第一章：B/S架构体系安全渗透测试基础</h1><ol>
<li>HTTP协议基本概念<br>（1）介绍HTTP标示URL<br>（2）HTTP响应状态码<br>（3）HTTP协议传输内容</li>
<li>WEB应用认证基本概念<br>（1）HTTP常见认证机制<br>（2）BASE64编码介绍</li>
<li>B/S架构常见安全问题<br>（1）拒绝服务攻击基础<br>（2）Smurf攻击模型<br>（3）Fraggle攻击模型<br>（4）SynFlooding攻击模型<br>（5）碎片攻击 </li>
<li>嗅探理论基础<br>（1）网络嗅探原理<br>（2）密码嗅探介绍<br>（3）协议分析基础介绍 </li>
</ol>
<h1 id="第二章：B-S架构体系安全渗透测试攻击基础"><a href="#第二章：B-S架构体系安全渗透测试攻击基础" class="headerlink" title="第二章：B/S架构体系安全渗透测试攻击基础"></a>第二章：B/S架构体系安全渗透测试攻击基础</h1><ol>
<li>B/S架构结构端口扫描分析<br>（1）SuperScan工具<br>（2）Nmap端口扫描工具</li>
<li>输入验证攻击基础知识<br>（1）输入验证攻击基本概念<br>（2）Unicode漏洞介绍<br>（3）输入验证二次解码漏洞介绍 </li>
<li>ASP脚本注入基础知识<br>（1）ASP脚本注入基本概念<br>（2）ASP脚本注入检测<br>（3）ASP脚本注入信息获取<br>（4）AASP脚本注入提权 </li>
<li>PHP脚本注入基础知识<br>（1）PHP脚本注入基本概念<br>（2）PHP脚本注入检测<br>（3）PHP脚本注入信息获取<br>（4）PHP脚本注入提权 </li>
<li>跨站脚本原理及防御<br>（1）跨站脚本基本概念<br>（2）跨站脚本实例<br>（3）跨站脚本解决方法 </li>
<li>Web权限提升分析<br>（1）Web权限提升基本概念<br>（2）WeBShell上传方法<br>（3）Web权限提升7大方法：密码破解、本地提权、Gina木马… </li>
<li>APR嗅探基础<br>（1）APR协议概念<br>（2）APR欺骗攻击<br>（3） 交换域网络嗅探</li>
</ol>
<h1 id="第三章：B-S架构体系安全渗透测试攻击与测试工具"><a href="#第三章：B-S架构体系安全渗透测试攻击与测试工具" class="headerlink" title="第三章：B/S架构体系安全渗透测试攻击与测试工具"></a>第三章：B/S架构体系安全渗透测试攻击与测试工具</h1><ol>
<li>攻击工具介绍<br>（1）注入攻击工具原理<br>（2）注入攻击工具分析<br>（3）攻击测试平台搭建 </li>
<li>注入攻击工具使用练习（ASP+SQL Server注入攻击实战）<br>（1）注入攻击工具使用<br>（2）域名检查攻击工具使用及域名信息查询用 </li>
<li>拒绝服务攻击工具使用练习<br>（1）SynFlooding攻击工具测试<br>（2）UDPflood攻击工具测试<br>（3）畸形DDOS攻击工具 </li>
<li>嗅探攻击工具使用练习<br>（1）ARP欺骗攻击工具 密码嗅探练习<br>（2）嗅探协议分析练习 </li>
<li>B/S安全评估工具使用练习<br>（1）Web脚本评估工具安装<br>（2）B/S架构扫描<br>（3）评估报告分析撰写模版</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;下文是从其他地方看到的关于WEB安全测试所需的基础知识纲要，大家可以结合本版面的其他WEB安全测试帖子一起学习&lt;/p&gt;
&lt;h1 id=&quot;第一章：B-S架构体系安全渗透测试基础&quot;&gt;&lt;a href=&quot;#第一章：B-S架构体系安全渗透测试基础&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>软件测试2-8原则</title>
    <link href="http://yoursite.com/2016/10/25/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%952-8%E5%8E%9F%E5%88%99/"/>
    <id>http://yoursite.com/2016/10/25/软件测试2-8原则/</id>
    <published>2016-10-25T09:43:26.000Z</published>
    <updated>2016-10-25T09:57:18.671Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2-8原则"><a href="#2-8原则" class="headerlink" title="2-8原则"></a>2-8原则</h1><ol>
<li><p>80%的错误是由20%的模块引起的<br>简单、容易的模块或功能是很少引入过多的Bug的，而对于存在复杂逻辑的一些关键模块往往会引起系统80%的错误。只有<br>关键模块稳定了，整个系统才可能真正的健壮和稳定。<br> 这个原则对于测试来说就是站在用户角度（而不是研发实现的角度），正确的选择重要功能模块作为测试的重点，不偏离方向。</p>
</li>
<li><p>80%的测试成本花在20%的软件模块中<br>设计测试用例时，常会用日产多少条用例来衡量工程师的工作，用例的多少与需求量有关，而往往影响软件架构设计的需求描述<br>是比较少的。这种情况下，设计测试用例时特别需要结合软件的概要设计、详细设计一起考虑。如果用例设计人员为了达到用例<br>的数量，通过大量复制用例，修改个别字眼，而没有真正设计高效的测试用例，那么用如此抵消甚至更多的用例数量来对待复杂的<br>20%的核心模块，在测试执行过程中必将导致一部分关键Bug找不出来。</p>
</li>
<li><p>80%的测试时间花在20%的软件模块中<br>对于复杂的模块，前期的测试设计和思考可能会耗费大量时间，而产出的用例量可能并不大。对于复杂的系统，特别是对于全新<br>系统，必须投入充足的时间来优先考虑设计，前期方案、用例设计的时间越短，后期风险越大。<br> 在项目进展到一定阶段后，增加人力并不一定能解决缩短时间的问题。</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;2-8原则&quot;&gt;&lt;a href=&quot;#2-8原则&quot; class=&quot;headerlink&quot; title=&quot;2-8原则&quot;&gt;&lt;/a&gt;2-8原则&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;80%的错误是由20%的模块引起的&lt;br&gt;简单、容易的模块或功能是很少引入过多的Bug的，而对于存
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>软件生存周期</title>
    <link href="http://yoursite.com/2016/10/24/%E8%BD%AF%E4%BB%B6%E7%94%9F%E5%AD%98%E5%91%A8%E6%9C%9F/"/>
    <id>http://yoursite.com/2016/10/24/软件生存周期/</id>
    <published>2016-10-24T07:57:55.000Z</published>
    <updated>2016-10-24T09:08:11.874Z</updated>
    
    <content type="html"><![CDATA[<p>一. 软件生存周期是软件工程学最基本的概念之一。各种各样的开发方法都不同程度地承认这个基本概念。<br>软件生存周期是指从构思软件产品开始到产品不能再使用时为止的时间周期。软件生存周期典型地包括需求分析阶段、<br>设计阶段、实现阶段、测试阶段、安装和验收阶段、运行和维护阶段，有时还包括引退阶段。在引退阶段内。对软件产品的支持<br>降终止。粗略来看，软件生存周期由计划、开发、运行三个时期组成，每一时期可再细分一些工作。文档是与软件生存周期紧密关联的。</p>
<h1 id="软件生存周期"><a href="#软件生存周期" class="headerlink" title="软件生存周期"></a>软件生存周期</h1><p>问题定义——可行性研究——指定开发计划——需求分析——概要设计——详细设计——编码——测试与排错——软件运行/维护<br>/升级——终止运行</p>
<p>二. 不同的思想，不同的过程，不同的结果。始终记住，软件=程序+文档。文档是指导编程的思想和方向。没有了它，你将付出<br>更大的代价。至于会付出多大的代价，相信只要你去接手别人只做一半程序而没有留下来任何说明性资料的项目就会明白了。</p>
<p>软件开发是一个把用户需要转化为软件需求，把软件需求转化为软件设计，用软件代码来实现软件设计，对软件代码进行测试，并<br>签署确认它可以投入运行使用的过程。在这个过程中的每一阶段，都应该包含有相应的文档编制工作。在建造一个大楼时，各种<br>各样的相关的设计和施工图纸贯穿于大楼建造的始终，我们很难想象如果没有这些设计图和施工图，高质量的楼宇如何能拔地而起<br>。同理，在软件开发过程中，没有充分的分析、合理的设计、实现，这样开发的软件产品必然是豆腐渣产品，经不起实际的检验。<br>常常有人认为，软件项目成功的标志都是交出能够正确运行的程序，文档是可有可无的。</p>
<p>反问一句：假如客户在软件运行一段时间后发现某一业务流程发生改变，需要重新设计。而这个改变将牵一而动全身，需要你在十几<br>个以上的子模块中改动程序。此时，你知道要改哪里，怎么改吗？如果你什么文档都没有，而且程序是在几个月前甚至是1年前编写<br>的，你将怎么做？打算用多久时间？</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一. 软件生存周期是软件工程学最基本的概念之一。各种各样的开发方法都不同程度地承认这个基本概念。&lt;br&gt;软件生存周期是指从构思软件产品开始到产品不能再使用时为止的时间周期。软件生存周期典型地包括需求分析阶段、&lt;br&gt;设计阶段、实现阶段、测试阶段、安装和验收阶段、运行和维护阶
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>搜索的艺术</title>
    <link href="http://yoursite.com/2016/10/20/%E6%90%9C%E7%B4%A2%E7%9A%84%E8%89%BA%E6%9C%AF/"/>
    <id>http://yoursite.com/2016/10/20/搜索的艺术/</id>
    <published>2016-10-20T08:13:20.000Z</published>
    <updated>2016-10-20T08:55:21.756Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搜索引擎命令大全！"><a href="#搜索引擎命令大全！" class="headerlink" title="搜索引擎命令大全！"></a>搜索引擎命令大全！</h1><ol>
<li><p>双引号 把搜索词放在双引号中，代表完全匹配搜索，也就是说搜索结果返回的页面包含双引号中出现的所有的词，连顺序也必须完全匹配。bd和Google 都支持这个指令。例如搜索： “seo方法图片”</p>
</li>
<li><p>减号 减号代表搜索不包含减号后面的词的页面。使用这个指令时减号前面必须是空格，减号后面没有空格，紧跟着需要排除的词。Google 和bd都支持这个指令。 例如：搜索 -引擎 返回的则是包含“搜索”这个词，却不包含“引擎”这个词的结果</p>
</li>
<li><p>星号 星号<em>是常用的通配符，也可以用在搜索中。百度不支持</em>号搜索指令。 比如在Google 中搜索：搜索<em>擎 其中的</em>号代表任何文字。返回的结果就不仅包含“搜索引擎”，还包含了“搜索收擎”，“搜索巨擎”等内容。</p>
</li>
<li><p>inurl inurl: 指令用于搜索查询词出现在url 中的页面。bd和Google 都支持inurl 指令。inurl 指令支持中文和英文。 比如搜索：inurl:搜索引擎优化 返回的结果都是网址url 中包含“搜索引擎优化”的页面。由于关键词出现在url 中对排名有一定影响，使用inurl:搜索可以更准确地找到竞争对手。 </p>
</li>
<li><p>inanchor inanchor:指令返回的结果是导入链接锚文字中包含搜索词的页面。百度不支持inanchor。 比如在Google 搜索 ：inanchor:点击这里 返回的结果页面本身并不一定包含“点击这里”这四个字，而是指向这些页面的链接锚文字中出现了“点击这里”这四个字。 可以用来找到某个关键词的竞争对收，而且这些竞争对手往往是做过SEO 的。研究竞争对手页面有哪些外部链接，就可以找到很多链接资源。</p>
</li>
<li><p>intitle intitle: 指令返回的是页面title 中包含关键词的页面。Google 和bd都支持intitle 指令。 使用intitle 指令找到的文件是更准确的竞争页面。如果关键词只出现在页面可见文字中，而没有出现在title 中，大部分情况是并没有针对关键词进行优化，所以也不是有力的竞争对手。 </p>
</li>
<li><p>allintitle allintitle:搜索返回的是页面标题中包含多组关键词的文件。 例如 ：allintitle:SEO 搜索引擎优化 就相当于：intitle:SEO intitle:搜索引擎优化 返回的是标题中中既包含“SEO”，也包含“搜索引擎优化”的页面 </p>
</li>
<li><p>allinurl 与allintitle: 类似。 allinurl:SEO 搜索引擎优化 就相当于 ：inurl:SEO inurl:搜索引擎优化</p>
</li>
<li><p>filetype 用于搜索特定文件格式。Google 和bd都支持filetype 指令。 比如搜索filetype:pdf SEO 返回的就是包含SEO 这个关键词的所有pdf 文件。 </p>
</li>
<li><p>site site:是SEO 最熟悉的高级搜索指令，用来搜索某个域名下的所有文件。</p>
</li>
<li><p>linkdomain linkdomain:指令只适用于雅虎，返回的是某个域名的反向链接。雅虎的反向链接数据还比较准 确，是SEO 人员研究竞争对手外部链接情况的重要工具之一。 比如搜索 linkdomain:<a href="http://cnseotool.com" target="_blank" rel="external">http://cnseotool.com</a> -site:<a href="http://cnseotool.com" target="_blank" rel="external">http://cnseotool.com</a> 得到的就是点石网站的外部链接，因为-site:<a href="http://cnseotool.com" target="_blank" rel="external">http://cnseotool.com</a> 已经排除了点石本身的页面，也就是内部 链接，剩下的就都是外部链接了。 </p>
</li>
<li><p>related related:指令只适用于Google，返回的结果是与某个网站有关联的页面。比如搜索 related:<a href="http://cnseotool.com" target="_blank" rel="external">http://cnseotool.com</a> 我们就可以得到Google 所认为的与点石网站有关联的其他页面。 这种关联到底指的是什么，Google 并没有明确说明，一般认为指的是有共同外部链接的网站。<br>上面介绍的这几个高级搜索指令，单独使用可以找到不少资源，或者可以更精确地定位竞争对 手。把这些指令混合起来使用则更强大。<br>inurl:gov 减肥 返回的就是url 中包含gov，页面中有“减肥”这个词的页面。很多SEO 人员认为GVM和学校网 站有比较高的权重，找到相关的GVM和学校网站，就找到了最好的链接资源。 </p>
</li>
</ol>
<p>下面这个指令返回的是来自.中国教育和科研计算机网CERNET，也就是学校域名上的包含“交换链接”这个词的页面： inurl:.中国教育和科研计算机网CERNET 交换链接 从中SEO 人员可以找到愿意交换链接的学校网站。 或者使用一个更精确的搜索： inurl:.中国教育和科研计算机网CERNET intitle:交换链接 返回的则是来自中国教育和科研计算机网CERNET 域名，标题中包含“交换链接”这四个字的页面，返回的结果大部分应 该是愿意交换链接的学校网站。</p>
<p>再比如下面这个指令： inurl:中国教育和科研计算机网CERNET*register 返回的结果是在.中国教育和科研计算机网CERNET 域名上，url 中包含“forum”以及“register”这两个单词的页面，也就是 学校论坛的注册页面。找到这些论坛，也就找到了能在高权重域名上留下签名的很多机会。</p>
<p>下面这个指令返回的是页面与减肥有关，url 中包含links 这个单词的页面： 减肥 inurl:links 很多站长把交换链接页面命名为links.html 等，所以这个指令返回的就是与减肥主题相关的交换 链接页面。 下面这个指令返回的是url 中包含<a href="http://gov.cn" target="_blank" rel="external">http://gov.cn</a> 以及links 的页面，也就是GVM域名上的交换链接页面： allinurl:gov.cn+links 最后一个例子，在雅虎搜索这个指令： linkdomain:<a href="http://cnseotool.com" target="_blank" rel="external">http://cnseotool.com</a> -linkdomain:<a href="http://cnseotool.com" target="_blank" rel="external">http://cnseotool.com</a> 返回的是链接到点石网站，却没有链接到我的博客的网站。</p>
<p>使用这个指令可以找到很多连向你 的竞争对手或其他同行业网站，却没连向你的网站的页面，这些网站是最好的链接资源。</p>
<p>高级搜索指令组合使用变化多端，功能强大。一个合格的SEO必须熟练掌握这几个常用指令的 意义及组合方法，才能更有效率地找到更多竞争对手和链接资源。 找外链的时候你可以用这几种命令组合，</p>
<h4 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h4><p>例如site:.com inurl:blog “post a comment” -”comments closed” -”you must be logged in” “输入你的关键词“， site:.com 是 指， 只显示.com的网站。 如果你想要 org的链接，就换成 site:.org，inurl:blog 是指博客。 “post a comment” -”comments closed” -”you must be logged in” 是指， “能够写评论的” 减去“ 关闭评论的” 再减去“ 必须要登录才能写评论的”。 大家还有什么更高级的命令可以补充！！！！ 转载 !!! 2014-01-08</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;搜索引擎命令大全！&quot;&gt;&lt;a href=&quot;#搜索引擎命令大全！&quot; class=&quot;headerlink&quot; title=&quot;搜索引擎命令大全！&quot;&gt;&lt;/a&gt;搜索引擎命令大全！&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;双引号 把搜索词放在双引号中，代表完全匹配搜索，也就是说搜索结果返
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>测试常用安装包</title>
    <link href="http://yoursite.com/2016/10/20/%E6%B5%8B%E8%AF%95%E5%B8%B8%E7%94%A8%E5%AE%89%E8%A3%85%E5%8C%85/"/>
    <id>http://yoursite.com/2016/10/20/测试常用安装包/</id>
    <published>2016-10-20T08:00:07.000Z</published>
    <updated>2016-10-20T08:05:05.748Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用的安装包列表如下："><a href="#常用的安装包列表如下：" class="headerlink" title="常用的安装包列表如下："></a>常用的安装包列表如下：</h1><p>1.wamp<br>下载地址<a href="http://www.wampserver.com/en/#download-wrapper" target="_blank" rel="external">http://www.wampserver.com/en/#download-wrapper</a></p>
<p>2.jdk8<br><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p>
<p>3.zentao<br><a href="http://www.zentao.net/download/79925.html" target="_blank" rel="external">http://www.zentao.net/download/79925.html</a></p>
<p>4.Xmind<br><a href="http://xiazai.xmindchina.cn/trail/xmind-7-windows.exe" target="_blank" rel="external">http://xiazai.xmindchina.cn/trail/xmind-7-windows.exe</a></p>
<p>5.SecureCRT<br><a href="https://yunpan.cn/cM6h7Hv3asj7p" target="_blank" rel="external">https://yunpan.cn/cM6h7Hv3asj7p</a> （提取码：4bce）</p>
<p>6.navicat<br><a href="http://download3.navicat.com/download/navicat112_mysql_en_x64.exe" target="_blank" rel="external">http://download3.navicat.com/download/navicat112_mysql_en_x64.exe</a></p>
<p>7.Python3<br><a href="http://www.python.org/ftp/python/3.3.0/Python-3.3.0.tgz" target="_blank" rel="external">http://www.python.org/ftp/python/3.3.0/Python-3.3.0.tgz</a></p>
<p>8.LR11<br>链接: <a href="http://pan.baidu.com/s/1dF5BeI9" target="_blank" rel="external">http://pan.baidu.com/s/1dF5BeI9</a> 密码: jwvr</p>
<p>9.QTP10<br>链接: <a href="http://pan.baidu.com/s/1qXI5CyK" target="_blank" rel="external">http://pan.baidu.com/s/1qXI5CyK</a> 密码: knzk</p>
<p>10.Mysql<br><a href="http://www.mysql.com/downloads/" target="_blank" rel="external">http://www.mysql.com/downloads/</a> （根据需要下对应版本）</p>
<p>11.Sqlite<br><a href="http://sqlite.org/download.html" target="_blank" rel="external">http://sqlite.org/download.html</a></p>
<p>12.Testlink<br><a href="https://yunpan.cn/cPTXiq2ekvsKX" target="_blank" rel="external">https://yunpan.cn/cPTXiq2ekvsKX</a> （提取码：71f5）</p>
<p>13.Maven<br><a href="https://maven.apache.org/" target="_blank" rel="external">https://maven.apache.org/</a></p>
<p>14.http_load  <a href="https://yunpan.cn/cB2xSEUDuCINt" target="_blank" rel="external">https://yunpan.cn/cB2xSEUDuCINt</a> （提取码：63bf）</p>
<p>15.webbench <a href="https://yunpan.cn/cB2xXqzbLYnKT" target="_blank" rel="external">https://yunpan.cn/cB2xXqzbLYnKT</a> （提取码：6839）</p>
<p>16.siege  <a href="https://yunpan.cn/cB2x9RbLB4VHc" target="_blank" rel="external">https://yunpan.cn/cB2x9RbLB4VHc</a> （提取码：0154）</p>
<p>17.安全扫描工具之AppScan<br>安装包：<a href="http://yunpan.cn/QGb3hevm9IRiR" target="_blank" rel="external">http://yunpan.cn/QGb3hevm9IRiR</a> （提取码：a1b4）<br>破解包<a href="http://yunpan.cn/QXhpkMdSdTj2F" target="_blank" rel="external">http://yunpan.cn/QXhpkMdSdTj2F</a> （提取码：300b）<br>中文文档<a href="http://yunpan.cn/c6eikwqCFPmBT" target="_blank" rel="external">http://yunpan.cn/c6eikwqCFPmBT</a> （提取码：fbb3）</p>
<h1 id="服务器环境部署系列～"><a href="#服务器环境部署系列～" class="headerlink" title="服务器环境部署系列～"></a>服务器环境部署系列～</h1><ol>
<li>Linux环境部署系列安装包</li>
</ol>
<p>折腾Linux先从搞个Linux服务器开始，日常自己学可以在Windows电脑上安装过虚拟机搞定，通常是VMware；当然也可以用virtualbox</p>
<p>Mac其实也是可以安装虚拟机的～如果你有需要，可以后台留言～</p>
<p>Vmware<br><a href="https://pan.baidu.com/s/1o7MdIwM" target="_blank" rel="external">https://pan.baidu.com/s/1o7MdIwM</a></p>
<p>Virtualbox<br><a href="https://yunpan.cn/cM6CfLbcaFFmF" target="_blank" rel="external">https://yunpan.cn/cM6CfLbcaFFmF</a> （提取码：23e8）</p>
<p>安装完虚拟机后，就可以安装Centos了</p>
<p>Centos 7 :<br><a href="https://yunpan.cn/cM6TyIQQeXmP9" target="_blank" rel="external">https://yunpan.cn/cM6TyIQQeXmP9</a> （提取码：e2aa）</p>
<p>2.一些服务的安装包</p>
<p>Jdk8<br><a href="https://yunpan.cn/cM6CWaGnJSrSI" target="_blank" rel="external">https://yunpan.cn/cM6CWaGnJSrSI</a> （提取码：59a1）</p>
<p>如果如上官网下载不了：</p>
<p>Jdk 7 8 打包送上<br><a href="https://yunpan.cn/cMtKA9QXyKnML" target="_blank" rel="external">https://yunpan.cn/cMtKA9QXyKnML</a> （提取码：78e8）</p>
<p>Tomcat<br><a href="https://yunpan.cn/cM6CEHkbNeu67" target="_blank" rel="external">https://yunpan.cn/cM6CEHkbNeu67</a> （提取码：e14f）</p>
<p>Nginx<br><a href="https://yunpan.cn/cM6C9myFhELNF" target="_blank" rel="external">https://yunpan.cn/cM6C9myFhELNF</a> （提取码：361d）</p>
<p>Mysql<br><a href="http://www.mysql.com/downloads/" target="_blank" rel="external">http://www.mysql.com/downloads/</a> （根据需要下对应版本）</p>
<p>Redis<br><a href="https://yunpan.cn/cM6CGrecJGiEd" target="_blank" rel="external">https://yunpan.cn/cM6CGrecJGiEd</a> （提取码：2a1c）</p>
<p>MongoDB</p>
<p>Zookeeper<br><a href="https://yunpan.cn/cS42UKGQ3hrGy" target="_blank" rel="external">https://yunpan.cn/cS42UKGQ3hrGy</a> （提取码：3bfd）</p>
<p>Ruby<br><a href="https://yunpan.cn/cM6CDAxDCpWXY" target="_blank" rel="external">https://yunpan.cn/cM6CDAxDCpWXY</a> （提取码：af14）</p>
<p>node.js<br><a href="https://yunpan.cn/cM6Cn2uXJk7P8" target="_blank" rel="external">https://yunpan.cn/cM6Cn2uXJk7P8</a> （提取码：1f6a）</p>
<p>Python</p>
<p>Maven<br>官网<a href="https://maven.apache.org/" target="_blank" rel="external">https://maven.apache.org/</a></p>
<p>Jenkins<br>官网<a href="http://jenkins.io/" target="_blank" rel="external">http://jenkins.io/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;常用的安装包列表如下：&quot;&gt;&lt;a href=&quot;#常用的安装包列表如下：&quot; class=&quot;headerlink&quot; title=&quot;常用的安装包列表如下：&quot;&gt;&lt;/a&gt;常用的安装包列表如下：&lt;/h1&gt;&lt;p&gt;1.wamp&lt;br&gt;下载地址&lt;a href=&quot;http://www.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>测试设计常见问题</title>
    <link href="http://yoursite.com/2016/10/20/%E6%B5%8B%E8%AF%95%E8%AE%BE%E8%AE%A1%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2016/10/20/测试设计常见问题/</id>
    <published>2016-10-20T01:39:15.000Z</published>
    <updated>2016-10-20T02:28:16.246Z</updated>
    
    <content type="html"><![CDATA[<h1 id="测试大纲"><a href="#测试大纲" class="headerlink" title="测试大纲"></a>测试大纲</h1><h4 id="测试大纲设计原则"><a href="#测试大纲设计原则" class="headerlink" title="测试大纲设计原则"></a>测试大纲设计原则</h4><ul>
<li>明确需求</li>
<li>测试人员真正理解待测功能和业务，并能体现出测试人员的测试思路</li>
<li>结果层次清晰</li>
<li>覆盖面全</li>
<li>用于功能测试设计</li>
</ul>
<h4 id="测试大纲设计方法"><a href="#测试大纲设计方法" class="headerlink" title="测试大纲设计方法"></a>测试大纲设计方法</h4><ul>
<li>按模块划分大纲</li>
<li>按功能点划分大纲</li>
<li>按菜单划分大纲</li>
<li>按业务逻辑划分大纲</li>
</ul>
<h4 id="测试大纲设计的常见问题"><a href="#测试大纲设计的常见问题" class="headerlink" title="测试大纲设计的常见问题"></a>测试大纲设计的常见问题</h4><ul>
<li>没有按照需求进行设计</li>
<li>照搬客户需求，缺少理解分析</li>
<li>混用多种大纲节点命名</li>
<li>大纲中出现多种测试类型</li>
<li>大纲级别划分过粗或过细</li>
</ul>
<h1 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h1><h4 id="测试用例的定义"><a href="#测试用例的定义" class="headerlink" title="测试用例的定义"></a>测试用例的定义</h4><ul>
<li>为了验证软件运行正常、执行结果准确，并且所实现的各项功能符合需求而设计的一组（个）或多组（个）数据或操作</li>
<li>一组（个）或多组（个）数据或操作的优化集合</li>
<li>大多情况下不能遍历软件所有的逻辑分支及操作</li>
</ul>
<h4 id="测试用例设计原则"><a href="#测试用例设计原则" class="headerlink" title="测试用例设计原则"></a>测试用例设计原则</h4><ul>
<li>以需求为依据</li>
<li>尽量细化，遍历所测功能，一条用例对应一个验证点</li>
<li>明确执行用例前的条件准备</li>
<li>操作步骤清晰，其他人能很好的执行</li>
<li>预期结果清晰，无二义性</li>
</ul>
<h4 id="测试用例设计要素"><a href="#测试用例设计要素" class="headerlink" title="测试用例设计要素"></a>测试用例设计要素</h4><ul>
<li>用例编号：用例唯一标识</li>
<li>用例前提条件（可选）：执行用例前所需准备</li>
<li>用例描述：言简意赅描述测试用例的用途</li>
<li>操作方法和步骤：有步骤的描述用例执行的操作</li>
<li>逾期结果：执行了上述操作后，应得到的正确结果</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;测试大纲&quot;&gt;&lt;a href=&quot;#测试大纲&quot; class=&quot;headerlink&quot; title=&quot;测试大纲&quot;&gt;&lt;/a&gt;测试大纲&lt;/h1&gt;&lt;h4 id=&quot;测试大纲设计原则&quot;&gt;&lt;a href=&quot;#测试大纲设计原则&quot; class=&quot;headerlink&quot; title=&quot;测
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>软件测试员应具备的知识</title>
    <link href="http://yoursite.com/2016/10/19/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%91%98%E5%BA%94%E5%85%B7%E5%A4%87%E7%9A%84%E7%9F%A5%E8%AF%86/"/>
    <id>http://yoursite.com/2016/10/19/软件测试员应具备的知识/</id>
    <published>2016-10-19T02:08:52.000Z</published>
    <updated>2016-11-08T01:44:21.614Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>软件测试基础知识</li>
</ol>
<ul>
<li>测试计划编写</li>
<li>设计测试用例</li>
<li>编写测试报告</li>
<li>编写BUG报告单</li>
<li>跟踪BUG修复情况</li>
<li>还需要良好的沟通能力</li>
<li>以及各种测试阶段所使用的测试方法(单元测试、功能测试、集成测试、系统测试等等)</li>
</ul>
<ol>
<li>各种测试工具的使用：<br>我们在测试的工作中为了能够提高工作效率进程会用到很多工具：QTP、LoadRunner、QC、TD、Bug free、VSS、SVN等等工具，<br>虽然说工具不是万能的但是工具能为我们提高工作效率，所以不能把工具当神一样看待，但是必须得会熟练的使用</li>
<li>操作系统相关知识：<br>Windows、Linux、UNIX这些都必须会使用，而且不仅仅是简单的操作，一般的服务管理、注册表编辑、命令行操作都需要会，<br>可以想象下一个连apache服务都不会安装配置的人，谁能想象可以做好基于apache环境的测试工作。</li>
<li>数据库知识<br>现在Oracle的DBA待遇比一般的开发人员待遇还高，就知道数据库在企业中的重要性了，作为测试人员虽然不需要有DBA的能力，<br>但是基本的数据库操作你必须得会吧，不管是Oracle、DB2、还是MySql最少都应该能熟悉使用其中的一二。</li>
<li>计算机硬件知识<br>做过性能测试的朋友都知道在性能测试过程中硬件性能也是一个非常重要的指标、CPU、内存、IO、带宽等；</li>
<li>网络协议<br>如果你还不知道TCP和UDP有什么不一样的话请赶快去补充点知识吧，互联网时代，一切都通过网络传输，常用协议必须得了解</li>
<li>开发语言即代码编写能力：<br>虽然不会写代码也能做测试，但是如果你想做到高级测试工程师以上，那么代码编写能力就是必选项，如果不会写代码，那么你不可能成为高级测试。<br>高级测试工程师的一部分工作就是在写测试工具。<br>虽然测试也需要写代码但不需要和开发一样那么精通某一门语言，可是测试却需要了解很多门开发语言<br>（举一个简单的例子：你现在所在的项目从C++语言，2年后你换工作了，新公司的开发语言是java或者是VB什么的）所以在开发语言中测试需要更广的学习。</li>
<li>行业知识：<br>行业知识之所以写在最后面是因为前面的7条我们都可以通过学习来掌握、但是唯独行业知识却只能通过工作经验来积累、不要说你去看几本书就知道通信行业、<br>医疗行业、或者是航天行业、你认为在书本上面能学到么？ 由于行业知识的特殊性所以建议朋友们不要频繁的跳槽、经验的积累是需要时间来沉淀的。</li>
<li>具有一定的美学观：<br>这个说起来比较拗口一点、简单来说不管是开发活动还是测试活动、最后的目标就是将产品推向市场、而且得到用户的认可。所以如果产品在需求分析阶段就出现了偏离用户航道、<br>那么就算测试 开发做得再好这个项目也是一样会失败。所以各位如果有幸能够参加需求评审的话、请不要吝啬你的言论。</li>
<li>请不要忘记时刻学习着：<br>这点我相信大家应该都能理解所以不用写什么：仅此一点“不学习就会落后”</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;软件测试基础知识&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;测试计划编写&lt;/li&gt;
&lt;li&gt;设计测试用例&lt;/li&gt;
&lt;li&gt;编写测试报告&lt;/li&gt;
&lt;li&gt;编写BUG报告单&lt;/li&gt;
&lt;li&gt;跟踪BUG修复情况&lt;/li&gt;
&lt;li&gt;还需要良好的沟通能力&lt;/li&gt;
&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>笔记本</title>
    <link href="http://yoursite.com/2016/10/18/%E7%AC%94%E8%AE%B0%E6%9C%AC/"/>
    <id>http://yoursite.com/2016/10/18/笔记本/</id>
    <published>2016-10-18T07:08:17.000Z</published>
    <updated>2016-11-04T05:59:38.260Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一些日常小笔记本整理。（持续更新）"><a href="#一些日常小笔记本整理。（持续更新）" class="headerlink" title="一些日常小笔记本整理。（持续更新）"></a>一些日常小笔记本整理。（持续更新）</h1><h1 id="软件生命周期："><a href="#软件生命周期：" class="headerlink" title="软件生命周期："></a>软件生命周期：</h1><p>一个软件生命周期包括制定计划、需求分析定义、软件设计、程序编码、软件测试、软件运行、软件维护、软件停用等8个阶段。</p>
<h1 id="软件测试的基本问题（-1s）"><a href="#软件测试的基本问题（-1s）" class="headerlink" title="软件测试的基本问题（+1s）"></a>软件测试的基本问题（+1s）</h1><p>软件测试在软件生命周期中横跨两个阶段：</p>
<ul>
<li>第一个阶段：单元测试与集成测试阶段，即在每个模块编写出以后所做的必要测试。</li>
<li>第二个阶段：综合测试阶段，即在完成单元测试后进行的测试，如集成测试、系统测试、验收测试。</li>
</ul>
<h1 id="学习方法（思维）"><a href="#学习方法（思维）" class="headerlink" title="学习方法（思维）"></a>学习方法（思维）</h1><h4 id="一门新知识。"><a href="#一门新知识。" class="headerlink" title="一门新知识。"></a>一门新知识。</h4><ul>
<li>了解这门知识的概要轮廓（大概了解：是什么、能做什么、为什么会存在）。</li>
<li>哪个群体创造/发展的这个知识，这个群体背后的八卦是什么（比如微积分，莱布尼茨和牛顿的八卦），看八卦能更好理解牛人们的思维。</li>
<li>原来是这样一门有趣的知识呀，开始深入学习。</li>
<li>查遍全球关键资料，我可不想听一家之言。</li>
<li>了解这门知识的关联知识是什么。</li>
<li>心中了然了，原来这门知识是这样的，还有几个XX问题没解决。</li>
<li>运用知识创造出有趣的或以前不存在的东西，如果能解决几个没解决的XX问题最好。</li>
<li>一抖身加入这个知识所在的圈子，成为圈内人。</li>
<li>用跨界思维给这个圈子带来新鲜感，成为圈内认可的人。</li>
</ul>
<h1 id="测试需求分析主要有哪些步骤？"><a href="#测试需求分析主要有哪些步骤？" class="headerlink" title="测试需求分析主要有哪些步骤？"></a>测试需求分析主要有哪些步骤？</h1><ol>
<li>测试需求分析</li>
<li>需求采集</li>
<li>测试要点分析</li>
<li>测试需求跟踪矩阵</li>
<li>测试需求评审</li>
</ol>
<h1 id="何时开始做测试需求分析？"><a href="#何时开始做测试需求分析？" class="headerlink" title="何时开始做测试需求分析？"></a>何时开始做测试需求分析？</h1><p>项目经理通过和客户的交流，完成需求文档，由开发人员和测试人员共同完成需求文档的评审，<br>评审的内容包括：需求描述不清楚的地方和可能有明显冲突或者无法实现的功能的地方。<br>项目经理通过综合开发人员，测试人员以及客户的意见，<br>完成项目计划。然后进入项目，开始进行统计和跟踪</p>
<h1 id="定个小目标"><a href="#定个小目标" class="headerlink" title="定个小目标"></a>定个小目标</h1><ol>
<li>脚本能力，python shell 等</li>
<li>有持续集成这块的经验和能力（如 Jenkins）</li>
<li>有扎实的测试理论知识，有一定的方法论，有测试体系知识</li>
<li>Linux 、DB等知识必须具备</li>
<li>有开发语言基础，如Java 、C，至少能看得懂代码</li>
<li>至少有一些自动化测试经验，以及一些自动化框架知识</li>
<li>至少独立负责过某个产品/平台的测试，有一定的事项推动能力</li>
<li>有新人指导能力（这个阶段，一般都要指导一些新人）</li>
<li>对业界常用的测试工具了解</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一些日常小笔记本整理。（持续更新）&quot;&gt;&lt;a href=&quot;#一些日常小笔记本整理。（持续更新）&quot; class=&quot;headerlink&quot; title=&quot;一些日常小笔记本整理。（持续更新）&quot;&gt;&lt;/a&gt;一些日常小笔记本整理。（持续更新）&lt;/h1&gt;&lt;h1 id=&quot;软件生命周
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>软件测试术语汇总</title>
    <link href="http://yoursite.com/2016/10/18/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E6%9C%AF%E8%AF%AD%E6%B1%87%E6%80%BB/"/>
    <id>http://yoursite.com/2016/10/18/软件测试术语汇总/</id>
    <published>2016-10-18T06:21:54.000Z</published>
    <updated>2016-11-07T08:42:22.474Z</updated>
    
    <content type="html"><![CDATA[<h1 id="整理软件测试术语汇总"><a href="#整理软件测试术语汇总" class="headerlink" title="整理软件测试术语汇总"></a>整理软件测试术语汇总</h1><h1 id="集成测试"><a href="#集成测试" class="headerlink" title="集成测试"></a>集成测试</h1><ul>
<li>集成测试是在软件项目/产品在系统集成过程中所进行的测试，其主要目的是检查软件项目，<br>组件之间的接口是否正确，以及每个组件功能是否按照需求规格说明书编制。根据集成测试计划，<br>一边将软件组件或其他软件单位组合成越来越完整的系统，一边运行该系统，以检测所组成的系统是否正确。 </li>
<li>包括功能集成测试和非功能集成测试（备注：目前主要进行的是性能、压力、并发、效率测试。）。 </li>
</ul>
<h1 id="系统测试"><a href="#系统测试" class="headerlink" title="系统测试"></a>系统测试</h1><ul>
<li>系统测试是对已经集成好的软件项目/产品系统进行彻底的测试，以验证软件系统功能和性能等满足<br>其需求规格说明书所指定的要求，检查软件的行为和输出是否正确。系统测试按照系统测试计划进行。</li>
<li>包括功能系统测试和性能、以及非功能性系统测试（备注：目前主要进行的是性能、压力、并发、效率测试。）。 </li>
</ul>
<h1 id="冒烟-Smoking-测试"><a href="#冒烟-Smoking-测试" class="headerlink" title="冒烟(Smoking)测试"></a>冒烟(Smoking)测试</h1><ul>
<li>冒烟测试又称为可接收性测试，是测试部在开始大范围功能或性能测试前，对最基本功能主要流程的简单测试，<br>验证系统是否满足接收测试的标准。满足标准测试部开始测试，否则返回程序开发部重新修订。</li>
<li>同时测试部协助查找造成该版本不能开始测试的主要原因，程序开发部加以修订。 </li>
</ul>
<h1 id="回归测试"><a href="#回归测试" class="headerlink" title="回归测试"></a>回归测试</h1><ul>
<li>根据已经关闭的缺陷再重新进行的测试。目的在于验证以前出现过但已经修复好的缺陷不再重新出现。</li>
<li>在验证已经关闭的缺陷不仅要服从缺陷原来出现时的步骤重新测试，而且还要测试有可能受影响的所有功能。<br>因此应当鼓励对所有回归测试用例实现脚本化。</li>
</ul>
<h1 id="α测试"><a href="#α测试" class="headerlink" title="α测试"></a>α测试</h1><ul>
<li>α测试规定是企业内部项目/产品在企业内部试用的过程。 </li>
<li>根据项目/产品情况，企业高层管理者确定项目/产品是否需要开展α测试。</li>
<li>α测试可以从软件项目/产品编码结束之时开始，或在项目/产品系统测试完成之后开始，也可以在确认测试过程中产品达到一定的稳定和可靠性之后再开始。</li>
<li>α测试产品经理主持，产品运维部搭建项目/产品运营环境，需求工程师协助收集新需求，测试经理协助收集产品缺陷。</li>
</ul>
<h1 id="β测试"><a href="#β测试" class="headerlink" title="β测试"></a>β测试</h1><ul>
<li>β测试是由企业的外部用户在实际运营环境下进行的使用。这些用户是与企业签定了支持产品预发行合同的外部客户，他们要求使用该产品，并愿意反馈有关信息给企业。</li>
<li>β测试由产品经理主持，产品运维部搭建项目/产品运营环境，需求工程师协助收集新需求，测试经理协助收集产品缺陷。</li>
<li>只有当α测试达到一定的可靠程度时，才开始β测试。由于它处在整个测试的最后阶段，不能指望这时发现主要问题。</li>
</ul>
<h1 id="功能性测试"><a href="#功能性测试" class="headerlink" title="功能性测试"></a>功能性测试</h1><ul>
<li>验证软件功能能否正常按照它的需求规格说明书和设计进行工作。包括满足明确的或者隐含的功能，检验运行软件时的期望行为是否符合原需求。</li>
</ul>
<h1 id="可靠性测试"><a href="#可靠性测试" class="headerlink" title="可靠性测试"></a>可靠性测试</h1><ul>
<li>在规定的一段时间、以及特定环境下，验证软件产品/项目具备稳定运行能力的测试。</li>
</ul>
<h1 id="易用性测试"><a href="#易用性测试" class="headerlink" title="易用性测试"></a>易用性测试</h1><ul>
<li>验证软件产品/项目是否符合大多数用户的使用习惯、以及是否符合国家易用性相关标准。</li>
</ul>
<h1 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h1><ul>
<li>在软件工程中，性能测试属于效率测试的一部分。</li>
<li>按照需求规格说明书中性能测试需求，验证软件的性能水平是否能够满足需求点。</li>
</ul>
<h1 id="可维护性测试"><a href="#可维护性测试" class="headerlink" title="可维护性测试"></a>可维护性测试</h1><ul>
<li>检测软件是否允许或方便的进行修正、改进或更改的能力。</li>
</ul>
<h1 id="可移植性测试"><a href="#可移植性测试" class="headerlink" title="可移植性测试"></a>可移植性测试</h1><ul>
<li>检测软件是否可从某一环境转移到另一环境（系统体系结构、硬件或软件环境）的能力。</li>
</ul>
<h1 id="用户文档测试"><a href="#用户文档测试" class="headerlink" title="用户文档测试"></a>用户文档测试</h1><ul>
<li>完整性：用户文档应包含产品使用所需信息。</li>
<li>正确性：用户文档中所有信息应是正确的，不能有歧义和错误的表达。</li>
<li>一致性：用户文档自身内容或相互之间以及与产品描述之间都不应相互矛盾。每个术语的含义宜处处保持一致。</li>
<li>易理解性：用户文档对于正常执行其工作任务的一般用户是易理解的。</li>
<li>易浏览性：用户文档宜易于浏览，以使相互关系明确。</li>
</ul>
<h1 id="用户界面测试"><a href="#用户界面测试" class="headerlink" title="用户界面测试"></a>用户界面测试</h1><ul>
<li>分析软件用户界面的设计是否合乎用户期望或要求。它常常包括菜单，对话框及对话框上所有按钮，<br>文字，出错提示，帮助信息（菜单 和在线帮助）等方面的测试。</li>
</ul>
<h1 id="白盒测试"><a href="#白盒测试" class="headerlink" title="白盒测试"></a>白盒测试</h1><ul>
<li>通过程序的源代码进行测试，而不使用用户界面。</li>
<li>这种类型的测试需要从代码语法和代码规范发现内部代码在算法、溢出、路径、条件等等中的缺陷或者错误，进而加以修正。</li>
</ul>
<h1 id="黑盒测试"><a href="#黑盒测试" class="headerlink" title="黑盒测试"></a>黑盒测试</h1><ul>
<li>通过使用整个软件或某个软件界面严格地执行测试, 而不关心程序源代码。</li>
<li>测试人员通过输入数据（正确数据、错误数据）看输出的结果，从而了解软件怎样工作。</li>
</ul>
<h1 id="灰盒测试"><a href="#灰盒测试" class="headerlink" title="灰盒测试"></a>灰盒测试</h1><ul>
<li>灰盒测试就像黑盒测试一样是通过用户界面测试，但是测试人员已经有所了解该软件或某个软件功能的源代码程序具体是怎样设计的。甚至于还读过部分源代码。 </li>
<li>测试人员可以有的放矢地进行某种确定条件的功能测试。</li>
</ul>
<h1 id="有效用例"><a href="#有效用例" class="headerlink" title="有效用例"></a>有效用例</h1><ul>
<li>有效用例(Valid case)或者叫合法输入用例：是已知软件程序能正确地处理的测试用例。</li>
</ul>
<h1 id="无效用例"><a href="#无效用例" class="headerlink" title="无效用例"></a>无效用例</h1><ul>
<li>无效用例（Invalid case）或者出错用例(error case)：描述在不合法输入时程序的反应。也就是程序在不合法输入时可以得到正确的预期处理结果。</li>
</ul>
<h1 id="等价类测试"><a href="#等价类测试" class="headerlink" title="等价类测试"></a>等价类测试</h1><ul>
<li>等价类划分方法把所有可能的输入数据，即程序的输入域划分成若干部分，然后从每一部分中选取少数有代表性的数据做为测试用例。</li>
<li>等价类的划分有两种不同的情况：</li>
</ul>
<ol>
<li>有效等价类：是指对于程序的规格说明来说，是合理的，有意义的输入数据构成的集合。</li>
<li>无效等价类：是指对于程序的规格说明来说，是不合理的，无意义的输入数据构成的集合。</li>
</ol>
<ul>
<li>在设计测试用例时，要同时考虑有效等价类和无效等价类的设计。</li>
</ul>
<h1 id="边界值测试"><a href="#边界值测试" class="headerlink" title="边界值测试"></a>边界值测试</h1><ul>
<li>边界值测试，是对等价类测试方法的补充。这里所说的边界是指，相当于输入等价类和输出等价类而言，稍高于其边界值或稍低于其边界值的一些特定情况。</li>
<li>使用边界值方法设计测试用例，首先应确定边界情况。应当选取正好等于，刚刚大于，或刚刚小于边界的值做为测试数据，而不是选取等价类中的典型值或任意值做为测试数据。</li>
</ul>
<h1 id="国际化测试"><a href="#国际化测试" class="headerlink" title="国际化测试"></a>国际化测试</h1><ul>
<li>验证软件程序在不同国家或区域的平台上也能够如预期运行，支持使用当地常用的日期，字体，文字表示，特殊格式等。</li>
</ul>
<h1 id="本地化测试"><a href="#本地化测试" class="headerlink" title="本地化测试"></a>本地化测试</h1><ul>
<li>本地化测试要验证所有已计划要发布的不同语言版本软件，是否能被正确地翻译成当地语言。</li>
<li>这类测试一般包括验证菜单，对话框，出错信息，帮助内容等所有用户界面上的文字都能够显示正确翻译好的当地文字。</li>
</ul>
<h1 id="测试环境部署"><a href="#测试环境部署" class="headerlink" title="测试环境部署"></a>测试环境部署</h1><ul>
<li>根据需求规格说明书中硬件环境要求和软件要求，搭建软硬件环境。</li>
<li>从配置管理库取得程序的源代码，根据编译手册，编译产品包。</li>
<li>根据安装手册，配置产品测试环境，包括功能和性能系统测试环境。</li>
<li>在此过程中，存在编译手册和安装手册的验证。</li>
</ul>
<h1 id="缺陷"><a href="#缺陷" class="headerlink" title="缺陷"></a>缺陷</h1><ul>
<li>缺陷也可称为Bug。凡不符合需求规格说明书的定义，都称之为缺陷。</li>
</ul>
<h1 id="错误（error）"><a href="#错误（error）" class="headerlink" title="错误（error）"></a>错误（error）</h1><ul>
<li>错误的同义词是过失（mistake）。编程时出的错称为“bug”。</li>
</ul>
<h1 id="故障（fault）"><a href="#故障（fault）" class="headerlink" title="故障（fault）"></a>故障（fault）</h1><ul>
<li>故障是错误的后果。</li>
</ul>
<h1 id="静态测试"><a href="#静态测试" class="headerlink" title="静态测试"></a>静态测试</h1><ul>
<li>主要目的是对软件的编程风格、结构等方面进行评估。静态测试包括代码检查、静态结构分析、代码质量度量等。通过分析代码<br>结构来检测程序的正确性</li>
</ul>
<h1 id="动态测试"><a href="#动态测试" class="headerlink" title="动态测试"></a>动态测试</h1><ul>
<li>必须真正运行被测程序，通过输入测试用例，对运行过程中的输入、输出数据进行分析，从而得出结论。动态测试包括功能测试<br>覆盖率分析、性能分析、内存分析等。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;整理软件测试术语汇总&quot;&gt;&lt;a href=&quot;#整理软件测试术语汇总&quot; class=&quot;headerlink&quot; title=&quot;整理软件测试术语汇总&quot;&gt;&lt;/a&gt;整理软件测试术语汇总&lt;/h1&gt;&lt;h1 id=&quot;集成测试&quot;&gt;&lt;a href=&quot;#集成测试&quot; class=&quot;head
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>编写测试用例与设计</title>
    <link href="http://yoursite.com/2016/10/17/%E7%BC%96%E5%86%99%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E4%B8%8E%E8%AE%BE%E8%AE%A1/"/>
    <id>http://yoursite.com/2016/10/17/编写测试用例与设计/</id>
    <published>2016-10-17T06:45:27.000Z</published>
    <updated>2016-10-17T06:46:53.889Z</updated>
    
    <content type="html"><![CDATA[<p>即：软件功能拆分，把功能点列出来，然后对每一个功能进行拆分和归纳。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;即：软件功能拆分，把功能点列出来，然后对每一个功能进行拆分和归纳。&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>软件测试工具</title>
    <link href="http://yoursite.com/2016/10/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2016/10/17/软件测试工具/</id>
    <published>2016-10-17T02:49:52.000Z</published>
    <updated>2016-10-17T05:56:05.395Z</updated>
    
    <content type="html"><![CDATA[<h1 id="测试工具"><a href="#测试工具" class="headerlink" title="测试工具"></a>测试工具</h1><p>  目前市场上的测试工具很多，可分为静态测试工具、动态测试工具、黑盒测试工具、白盒测试工具、测试执行评估工具、<br>测试管理工具等，因此，对测试工具的选择是一个比较重要的问题，应根据测试需求和实际条件来选择已有的测试工具，或购买、<br>自行开发相应的测试工具。</p>
<h1 id="搭建测试环境还应注意以下几点："><a href="#搭建测试环境还应注意以下几点：" class="headerlink" title="搭建测试环境还应注意以下几点："></a>搭建测试环境还应注意以下几点：</h1><ul>
<li>尽量模拟用户的真实使用环境；</li>
<li>测试环境中尽量不要安装其它与被测试软件无关的软件，但最好安装杀毒软件，以确保系统没有病毒；</li>
<li>测试环境应与开发环境独立。</li>
</ul>
<h1 id="白盒测试工具"><a href="#白盒测试工具" class="headerlink" title="白盒测试工具"></a>白盒测试工具</h1><h4 id="静态测试工具"><a href="#静态测试工具" class="headerlink" title="静态测试工具"></a>静态测试工具</h4><ul>
<li>职能：主要集中在需求文档、设计文档以及程序结构上，可以进行类型分析、接口分析、输入输出规格说明分析等。</li>
<li>工具：(更新中)<h4 id="动态测试工具"><a href="#动态测试工具" class="headerlink" title="动态测试工具"></a>动态测试工具</h4></li>
<li>职能：功能确认与接口策划四、覆盖率分析、性能分析、内存分析等</li>
<li>工具：（更新中）<h1 id="黑盒测试工具"><a href="#黑盒测试工具" class="headerlink" title="黑盒测试工具"></a>黑盒测试工具</h1></li>
<li>工具：（更新中）</li>
<li>分类：<ol>
<li>功能测试工具</li>
<li>性能测试工具<h1 id="测试设计和开发工具"><a href="#测试设计和开发工具" class="headerlink" title="测试设计和开发工具"></a>测试设计和开发工具</h1></li>
</ol>
</li>
<li>测试设计： 说明测试被测软件特征或特征组合的方法，确定并选择相关测试用例的过程。</li>
<li>测试开发： 将测试设计转换成具体的测试用例的过程。</li>
<li>工具类型： <ol>
<li>测试数据生成器 （更新中）</li>
<li>基于需求的测试设计工具</li>
<li>捕获/回放工具和覆盖分析工具<h1 id="测试执行和评估工具"><a href="#测试执行和评估工具" class="headerlink" title="测试执行和评估工具"></a>测试执行和评估工具</h1></li>
</ol>
</li>
<li>测试执行和评估： 执行测试用例并对结果进行评估的过程，包括选择用于执行的测试用例、设置测试环境、<br>运行所选择的测试<br>记录测试执行活动<br>分析潜在的软件故障并测量测试工作的有效性。</li>
<li>工具类型：<ol>
<li>捕获/回放</li>
<li>覆盖分析</li>
<li>存储器测试</li>
</ol>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;测试工具&quot;&gt;&lt;a href=&quot;#测试工具&quot; class=&quot;headerlink&quot; title=&quot;测试工具&quot;&gt;&lt;/a&gt;测试工具&lt;/h1&gt;&lt;p&gt;  目前市场上的测试工具很多，可分为静态测试工具、动态测试工具、黑盒测试工具、白盒测试工具、测试执行评估工具、&lt;br&gt;测试管
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>测试分类</title>
    <link href="http://yoursite.com/2016/10/17/%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB/"/>
    <id>http://yoursite.com/2016/10/17/测试分类/</id>
    <published>2016-10-17T01:34:51.000Z</published>
    <updated>2016-10-17T02:16:13.825Z</updated>
    
    <content type="html"><![CDATA[<h1 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h1><p>目的：检测程序模块中有无故障存在<br>对象：软件设计的最小单位，与程序设计和编程实现关系密切</p>
<h1 id="集成测试"><a href="#集成测试" class="headerlink" title="集成测试"></a>集成测试</h1><p>目的：发现与接口有关的模块之间的问题<br>方法：非增式集成测试方法和增式集成测试法</p>
<h4 id="非增式集成测试方法"><a href="#非增式集成测试方法" class="headerlink" title="非增式集成测试方法"></a>非增式集成测试方法</h4><ol>
<li>对每一个模块进行单元测试</li>
<li>在此基础上按程序结构图将各模块连接起来，把连接后的程序当作一个整体进行测试<h4 id="增式集成测试法"><a href="#增式集成测试法" class="headerlink" title="增式集成测试法"></a>增式集成测试法</h4>不断地把待测试模块连接到已测试模块集（或其子集）上， 对待测模块进行测试，知道最后一个模块测试完毕</li>
</ol>
<h1 id="确认测试"><a href="#确认测试" class="headerlink" title="确认测试"></a>确认测试</h1><p>目的：对软件产品进行评估以确定其是否满足软件需求的过程</p>
<h1 id="系统测试"><a href="#系统测试" class="headerlink" title="系统测试"></a>系统测试</h1><p>目的：针对系统中的各个组成部分进行的综合性检验，证明系统的性能<br>测试人员要求：<br>    系统开发人员不能进行系统测试<br>    系统开发组织不能负责系统测试</p>
<h1 id="验收测试"><a href="#验收测试" class="headerlink" title="验收测试"></a>验收测试</h1><p>目的： 向用户表明所开发的软件系统能够像用户所预定的那样工作<br>主要任务：</p>
<ul>
<li>明确规定验收测试通过的标准；</li>
<li>确定验收测试方法；</li>
<li>确定测试结果的分析方法；</li>
<li>确定验收测试的组织和可利用的资源；</li>
<li>制定验收测试的计划并进行评审；</li>
<li>设计验收测试的测试用例；</li>
<li>审查验收测试的准备工作；</li>
<li>执行验收测试；</li>
<li>分析测试结果，决定是否通过验收；</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;单元测试&quot;&gt;&lt;a href=&quot;#单元测试&quot; class=&quot;headerlink&quot; title=&quot;单元测试&quot;&gt;&lt;/a&gt;单元测试&lt;/h1&gt;&lt;p&gt;目的：检测程序模块中有无故障存在&lt;br&gt;对象：软件设计的最小单位，与程序设计和编程实现关系密切&lt;/p&gt;
&lt;h1 id=&quot;集成
    
    </summary>
    
    
  </entry>
  
</feed>
